var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.436,1,0.878]],["body/components/AppComponent.html",[0,0.798,1,1.557,2,0.712,3,0.615,4,1.747,5,1.747,6,1.747,7,1.747,8,0.525,9,2.74,10,1.747,11,2.756,12,1.932,13,2.543,14,2.221,15,4.732,16,2.221,17,4.303,18,0.525,19,1.346,20,1.995,21,1.954,22,0.615,23,0.048,24,1.536,25,1.747,26,1.198,27,3.384,28,0.817,29,0.817,30,0.615,31,0.817,32,4.303,33,3.485,34,1.896,35,0.572,36,1.371,37,2.543,38,1.724,39,1.356,40,2.221,41,2.221,42,2.221,43,2.57,44,1.747,45,1.346,46,1.747,47,0.932,48,1.747,49,1.058,50,1.747,51,0.932,52,1.058,53,1.747,54,0.932,55,1.536,56,1.536,57,1.747,58,0.037,59,0.037]],["title/modules/AppModule.html",[60,1.125,61,1.659]],["body/modules/AppModule.html",[1,1.725,2,0.672,3,0.581,8,0.496,12,1.13,23,0.049,28,1.315,29,0.771,30,0.754,31,0.771,35,0.444,36,1.342,39,1.279,47,1.425,49,1.618,51,1.425,52,1.296,54,1.425,58,0.035,59,0.035,60,1.661,61,3.325,62,1.886,63,3.151,64,3.727,65,2.837,66,2.585,67,2.585,68,2.585,69,2.585,70,2.671,71,2.837,72,2.585,73,2.185,74,3.192,75,4.145,76,2.585,77,2.185,78,3.357,79,3.192,80,3.192,81,2.585,82,1.886,83,3.357,84,2.585,85,1.648,86,3.357,87,1.886,88,2.585,89,2.185,90,3.192]],["title/modules/AppRoutingModule.html",[60,1.125,70,1.449]],["body/modules/AppRoutingModule.html",[0,0.758,2,0.762,3,0.659,8,0.562,23,0.049,24,1.644,28,1.291,29,0.875,30,0.817,31,0.875,35,0.547,36,1.237,47,1.237,51,1.237,52,1.404,54,1.237,58,0.038,59,0.038,60,1.451,70,2.318,78,3.637,81,2.933,82,2.14,83,3.637,84,2.933,85,1.87,86,2.933,87,2.14,88,2.933,91,3.622,92,3.622,93,4.491,94,2.52,95,2.14,96,1.644,97,3.622,98,2.933,99,5.103,100,3.622,101,3.622,102,1.87,103,3.622,104,3.622,105,3.622]],["title/components/EventDetailComponent.html",[0,0.436,47,0.773]],["body/components/EventDetailComponent.html",[0,0.711,1,0.755,2,0.509,3,0.439,4,1.247,5,1.247,6,1.247,7,1.247,8,0.375,10,1.247,11,2.528,12,1.734,14,1.77,16,1.77,18,0.375,19,1.072,20,1.374,21,1.097,22,0.833,23,0.049,26,1.686,28,1.048,29,0.584,30,0.439,31,0.584,34,0.968,35,0.577,36,0.945,37,2.565,38,1.739,39,0.968,40,1.77,41,1.77,42,1.77,43,2.24,44,1.247,45,1.357,46,1.247,47,1.262,48,1.247,49,0.755,50,1.247,51,0.665,52,0.755,53,1.247,54,0.665,55,1.097,56,1.097,57,1.247,58,0.029,59,0.029,87,2.894,95,1.428,96,1.97,102,1.77,106,3.352,107,1.957,108,1.77,109,2.356,110,3.987,111,3.43,112,2.162,113,5.469,114,3.259,115,1.374,116,3.987,117,2.565,118,2.565,119,1.284,120,1.374,121,2.416,122,2.069,123,3.43,124,1.598,125,1.374,126,2.416,127,4.34,128,2.416,129,1.739,130,2.416,131,1.247,132,2.416,133,2.416,134,0.968,135,1.654,136,1.098,137,1.654,138,2.416,139,1.654,140,2.416,141,1.77,142,0.856,143,1.957,144,1.374,145,3.43,146,2.416,147,2.416,148,1.654,149,1.957,150,2.416,151,2.027,152,2.348,153,2.027,154,3.43,155,1.374,156,2.348,157,2.027,158,2.777,159,1.77,160,2.027,161,1.557,162,2.777,163,1.072,164,2.777]],["title/components/EventListItemComponent.html",[0,0.436,49,0.878]],["body/components/EventListItemComponent.html",[0,0.749,1,0.87,2,0.585,3,0.506,4,1.436,5,1.436,6,1.436,7,1.436,8,0.432,10,1.436,11,2.628,12,1.803,14,1.952,16,1.952,18,0.432,19,1.183,22,0.839,23,0.049,26,1.708,28,1.038,29,0.672,30,0.506,31,0.672,34,1.114,35,0.574,36,1.545,39,1.114,40,1.952,41,1.952,42,1.952,43,2.381,44,1.436,45,1.442,46,1.436,47,0.766,48,1.436,49,1.442,50,1.436,51,0.766,52,0.87,53,1.436,54,0.766,55,1.263,56,1.263,57,1.436,58,0.032,59,0.032,89,3.406,95,1.643,106,3.406,108,1.952,109,2.54,112,1.951,115,1.516,117,2.725,118,2.725,119,1.305,120,1.516,124,1.516,125,1.516,129,1.516,131,1.952,134,1.114,151,1.643,152,2.589,156,2.589,158,3.063,160,2.235,165,2.252,166,3.782,167,4.298,168,3.782,169,4.451,170,3.782,171,2.781,172,3.782,173,3.782,174,2.781,175,2.781,176,2.781,177,2.781]],["title/injectables/GeoUtilityService.html",[178,0.994,179,1.659]],["body/injectables/GeoUtilityService.html",[2,0.534,3,0.462,8,0.394,13,1.5,18,0.394,22,0.646,23,0.05,26,1.45,28,0.989,29,0.613,30,0.646,31,0.858,35,0.272,45,1.111,58,0.03,59,0.03,65,2.431,96,2.255,115,1.423,120,1.778,124,1.423,125,1.423,129,1.939,134,1.017,141,2.114,142,1.258,143,2.876,144,1.939,163,0.794,178,1.45,179,2.421,180,3.593,181,2.056,182,2.622,183,2.014,184,3.552,185,3.593,186,1.5,187,4.096,188,4.096,189,2.539,190,3.552,191,2.539,192,3.552,193,4.669,194,4.838,195,2.539,196,1.61,197,4.436,198,2.539,199,3.552,200,3.552,201,3.552,202,3.552,203,4.17,204,2.876,205,3.552,206,2.876,207,3.552,208,3.552,209,4.096,210,3.552,211,3.552,212,3.552,213,4.096,214,1.738,215,2.539,216,2.539,217,2.539,218,2.099,219,2.539,220,2.099,221,2.539,222,2.539,223,2.539,224,2.539,225,1.612,226,2.539,227,2.539,228,3.552,229,3.552,230,3.552,231,2.539,232,2.539,233,2.539,234,1.738,235,3.552,236,1.738,237,2.539,238,2.539,239,2.539,240,1.738,241,3.552,242,2.539,243,2.539,244,2.539,245,2.539,246,2.539,247,2.539,248,3.552,249,3.552,250,2.41,251,2.539,252,2.539,253,3.552,254,3.552,255,2.539,256,2.539,257,2.539]],["title/injectables/GeolocationService.html",[178,0.994,225,1.275]],["body/injectables/GeolocationService.html",[2,0.725,3,0.626,8,0.535,13,2.035,18,0.535,19,1.361,22,0.626,23,0.05,24,1.564,25,1.778,26,1.689,28,1.051,29,0.832,30,0.626,31,0.832,35,0.369,58,0.037,59,0.037,115,1.744,120,1.912,129,1.744,134,1.38,142,1.22,161,1.564,178,1.689,196,1.567,214,2.357,218,2.571,220,2.571,225,2.166,258,2.789,259,3.538,260,3.538,261,3.444,262,3.444,263,2.246,264,2.246,265,4.351,266,3.524,267,3.524,268,2.979,269,2.979,270,4.351,271,3.444,272,3.444,273,3.444,274,3.265,275,3.444,276,2.789,277,2.035,278,4.351,279,3.444]],["title/interfaces/LocationCoordinatePt.html",[196,0.878,280,1.125]],["body/interfaces/LocationCoordinatePt.html",[2,0.648,3,0.56,8,0.478,18,0.478,19,1.266,20,1.234,21,2.406,22,0.975,23,0.05,30,0.823,35,0.515,38,1.234,58,0.035,59,0.035,119,1.262,136,1.323,142,1.814,144,2.185,153,1.82,155,1.623,157,1.82,159,1.59,161,2.182,163,1.266,186,2.673,196,1.266,218,2.95,220,2.95,236,2.108,269,2.108,280,1.813,281,1.82,282,1.82,283,4.382,284,2.494,285,2.494,286,2.108,287,1.82,288,2.09,289,2.494,290,2.108,291,2.108,292,2.108,293,2.494,294,2.494,295,2.494,296,2.393,297,2.494,298,2.108,299,2.494,300,2.494,301,1.398,302,2.494,303,2.494,304,1.82,305,2.108,306,2.494]],["title/components/MapViewPageComponent.html",[0,0.436,51,0.773]],["body/components/MapViewPageComponent.html",[0,0.625,1,0.486,2,0.731,3,0.282,4,1.27,5,0.802,6,0.802,7,0.802,8,0.241,10,0.802,11,2.178,12,1.494,14,1.27,16,1.27,18,0.241,19,0.769,20,0.622,22,0.796,23,0.05,26,1.667,28,0.914,29,0.375,30,0.282,31,0.594,34,2.12,35,0.533,36,0.678,37,1.454,38,0.622,39,0.622,40,1.27,41,1.27,42,1.27,43,1.793,44,0.802,45,1.184,46,0.802,47,0.428,48,0.802,49,0.486,50,0.802,51,1.205,52,1.71,53,0.802,54,0.428,55,0.705,56,1.915,57,0.802,58,0.03,59,0.021,63,1.063,71,1.063,85,2.472,96,2.138,108,1.577,109,1.805,112,1.828,114,2.756,115,0.986,117,2.053,118,1.454,119,1.252,120,0.986,122,1.614,124,1.224,125,1.517,129,1.849,131,1.577,134,0.622,135,1.063,136,1.162,137,1.063,139,1.063,141,1.793,142,1.23,148,1.684,151,0.918,152,1.684,155,0.622,156,1.063,160,0.918,162,1.258,163,0.769,164,1.258,196,1.086,225,2.138,259,2.378,260,2.591,263,1.793,264,1.27,274,1.063,301,0.705,307,3.278,308,0.918,309,3.474,310,2.473,311,1.992,312,3.474,313,3.474,314,3.474,315,3.054,316,3.054,317,1.553,318,1.992,319,1.553,320,1.992,321,1.992,322,1.992,323,1.553,324,4.219,325,4.86,326,1.553,327,1.553,328,1.553,329,1.553,330,2.46,331,2.46,332,4.196,333,3.054,334,1.684,335,2.46,336,2.46,337,1.992,338,3.066,339,4.615,340,3.054,341,2.46,342,3.054,343,1.553,344,1.553,345,1.805,346,1.992,347,1.553,348,1.553,349,2.46,350,1.258,351,1.553,352,1.553,353,1.258,354,1.553,355,1.553,356,0.918,357,2.46,358,1.553,359,1.553,360,1.553,361,2.091,362,1.553,363,1.553,364,1.553,365,2.46,366,1.258,367,1.553,368,2.46,369,1.553,370,1.553,371,2.378,372,2.46,373,1.553,374,1.553,375,1.258,376,1.553,377,1.553,378,1.553,379,1.553,380,2.46,381,1.553,382,1.553,383,1.553,384,1.553,385,1.258,386,1.553,387,1.258,388,1.553,389,1.553,390,1.063,391,1.553,392,1.553,393,2.46,394,3.054,395,2.46,396,1.553,397,1.553,398,2.46,399,1.553,400,1.553,401,1.553,402,3.054,403,2.46,404,3.474,405,1.258,406,1.553,407,1.553,408,3.054,409,1.553,410,1.258,411,1.553,412,1.063,413,1.063,414,1.992,415,1.553]],["title/components/MasterEventsListPageComponent.html",[0,0.436,54,0.773]],["body/components/MasterEventsListPageComponent.html",[0,0.656,1,0.618,2,0.416,3,0.359,4,1.02,5,1.02,6,1.02,7,1.02,8,0.307,10,1.02,11,2.375,12,1.629,14,1.529,16,1.529,18,0.307,19,1.111,21,2.014,22,0.807,23,0.049,24,1.613,25,1.529,26,1.713,28,1.021,29,0.477,30,0.359,31,0.477,34,0.792,35,0.605,36,1.532,39,0.792,40,1.529,41,1.529,42,1.529,43,2.037,44,1.02,45,1.387,46,1.02,47,0.544,48,1.02,49,0.618,50,1.02,51,0.544,52,0.618,53,1.02,54,1.267,55,2.237,56,2.089,57,1.02,58,0.034,59,0.025,82,2.912,96,1.613,102,1.02,108,1.529,109,2.099,112,2.014,114,2.893,115,1.187,117,2.622,118,1.75,119,1.111,120,1.187,122,1.778,124,1.187,125,1.187,129,1.844,131,1.529,134,1.187,135,1.353,136,0.978,137,1.353,139,1.353,141,1.02,142,1.258,196,1.234,225,2.301,259,2.701,260,2.701,263,2.442,264,2.29,277,1.168,290,2.028,301,1.345,304,1.75,308,1.168,310,2.877,311,2.399,318,2.399,320,2.399,321,2.399,322,2.399,350,1.601,353,1.601,390,1.353,410,1.601,412,1.353,413,2.432,414,3.195,416,3.991,417,4.437,418,3.946,419,3.946,420,2.962,421,1.976,422,1.976,423,2.962,424,1.976,425,1.976,426,2.962,427,1.976,428,2.028,429,1.976,430,1.976,431,1.976,432,1.976,433,1.601,434,1.601,435,1.976,436,1.976,437,1.353,438,1.976,439,2.962,440,1.976,441,1.976,442,3.553,443,1.976,444,2.962,445,1.976,446,1.976,447,1.976,448,1.976,449,1.601,450,1.976,451,1.976]],["title/injectables/MockTrainingEventApiService.html",[122,1.125,178,0.994]],["body/injectables/MockTrainingEventApiService.html",[2,0.294,3,0.254,8,0.217,12,0.494,13,0.824,18,0.217,19,0.706,21,2.113,22,0.83,23,0.05,24,2.027,25,2.243,26,1.648,28,0.789,29,0.337,30,0.254,31,0.337,34,0.559,35,0.592,36,0.384,38,1.437,45,1.396,58,0.035,59,0.019,96,2.231,102,0.72,112,1.025,115,0.904,119,1.309,120,1.139,122,1.741,124,1.829,125,1.829,129,2.096,131,0.72,134,0.559,136,1.367,141,2.304,142,1.431,144,2.075,151,0.824,159,1.686,160,0.824,163,0.706,178,1.006,179,2.698,182,1.334,183,1.834,186,1.334,196,1.122,214,0.955,234,1.545,240,1.946,250,0.72,263,1.165,264,1.981,268,2.236,277,1.334,287,2.12,288,2.086,301,1.29,305,2.455,346,1.828,361,0.955,366,1.828,428,0.955,433,1.828,434,1.129,437,0.955,449,3.272,452,3.831,453,1.129,454,2.257,455,2.842,456,2.257,457,2.842,458,2.257,459,2.257,460,2.842,461,2.842,462,2.257,463,1.395,464,1.395,465,1.395,466,2.257,467,1.395,468,2.842,469,3.108,470,2.257,471,2.905,472,3.587,473,2.455,474,2.257,475,2.302,476,2.302,477,1.946,478,2.842,479,1.395,480,1.395,481,1.395,482,1.395,483,1.395,484,1.129,485,1.395,486,1.395,487,2.257,488,1.395,489,1.395,490,1.395,491,3.587,492,1.395,493,1.828,494,2.257,495,2.257,496,1.395,497,2.842,498,2.257,499,2.302,500,2.257,501,1.828,502,2.257,503,2.257,504,1.395,505,3.407,506,1.395,507,2.975,508,2.257,509,3.587,510,2.257,511,1.828,512,2.257,513,2.257,514,2.842,515,1.828,516,1.828,517,2.257,518,2.257,519,1.395,520,2.302,521,2.302,522,1.828,523,4.346,524,2.257,525,1.395,526,1.395,527,2.842,528,1.828,529,1.395,530,1.395,531,2.645,532,2.257,533,1.334,534,1.828,535,2.257,536,1.395,537,2.257,538,2.257,539,1.395,540,2.257,541,1.395,542,1.395,543,1.946,544,1.395,545,1.129,546,1.395,547,1.395,548,1.395,549,1.395,550,1.395,551,1.545,552,1.395,553,1.395,554,1.395,555,2.842,556,2.257,557,1.395,558,2.257,559,1.395,560,1.395,561,1.395,562,1.129,563,2.842,564,1.395,565,2.842,566,1.395,567,2.257,568,1.395,569,1.395,570,1.395,571,1.395,572,1.395,573,2.842,574,1.395,575,1.395,576,1.395,577,1.395,578,1.395,579,2.257,580,1.395,581,2.257,582,1.395,583,2.257,584,1.395,585,1.129,586,1.129,587,1.395,588,0.955,589,1.395,590,1.395,591,2.257,592,2.257,593,2.257,594,1.395,595,1.395,596,1.395,597,0.824,598,0.824,599,1.395,600,1.395,601,1.395,602,1.395,603,1.395]],["title/interfaces/TrainingEvent.html",[119,0.678,280,1.125]],["body/interfaces/TrainingEvent.html",[2,0.57,3,0.492,8,0.42,18,0.42,19,1.161,20,1.828,21,2.517,22,0.996,23,0.05,30,0.771,35,0.551,38,1.828,58,0.032,59,0.032,119,1.243,136,1.418,142,1.748,144,2.138,153,2.695,155,1.978,157,2.695,159,2.354,161,2.371,163,1.543,186,2.505,196,0.847,218,2.505,220,2.505,236,2.542,269,1.854,280,1.698,281,1.6,282,1.6,283,4.279,284,2.193,285,2.193,286,2.542,287,2.195,288,2.188,289,3.007,290,2.542,291,2.542,292,2.542,293,3.007,294,2.193,295,3.007,296,2.695,297,3.007,298,2.542,299,3.007,300,3.007,301,1.686,302,3.007,303,3.007,304,1.6,305,2.542,306,2.193,597,1.6,598,1.6]],["title/coverage.html",[604,2.606]],["body/coverage.html",[0,0.763,1,0.918,8,0.456,9,2.377,22,0.534,23,0.049,35,0.473,36,1.298,47,0.808,49,0.918,51,0.808,52,1.474,54,0.808,58,0.034,59,0.034,82,1.734,85,2.025,87,1.734,89,2.009,106,2.685,107,2.377,119,0.709,122,1.176,136,1.49,165,2.377,178,1.564,179,1.734,180,2.377,181,2.377,183,2.005,196,0.918,225,1.333,258,2.377,280,1.572,281,2.318,282,2.318,307,2.685,308,2.61,345,1.734,356,3.22,371,2.009,416,2.377,452,2.377,453,2.377,515,2.377,533,1.734,543,2.009,604,2.009,605,2.377,606,2.935,607,2.935,608,5.576,609,2.935,610,2.935,611,2.935,612,2.935,613,2.935,614,2.935,615,2.935,616,2.935,617,5.481,618,2.377,619,2.935,620,3.672,621,3.672,622,2.009,623,3.922,624,3.922,625,2.377,626,2.377,627,2.377,628,2.377,629,2.377,630,2.377,631,2.377,632,2.377,633,2.935,634,2.935,635,2.935,636,2.935,637,2.935,638,2.935,639,2.377,640,3.176,641,2.377,642,3.176,643,2.377,644,2.935]],["title/dependencies.html",[62,1.991,645,1.909]],["body/dependencies.html",[23,0.049,29,0.972,58,0.041,59,0.041,62,2.377,76,3.876,77,3.276,95,2.377,646,4.022,647,5.616,648,4.022,649,4.022,650,4.022,651,4.022,652,4.022,653,3.257,654,4.022,655,4.022,656,4.022,657,4.022,658,4.022,659,4.022,660,4.022,661,4.022]],["title/miscellaneous/functions.html",[183,1.53,662,1.07]],["body/miscellaneous/functions.html",[18,0.592,23,0.044,35,0.408,45,1.449,58,0.04,59,0.04,124,1.857,125,1.857,136,1.431,149,3.087,155,1.527,163,1.192,182,2.252,183,1.731,288,1.968,469,3.087,473,2.609,477,3.172,499,3.087,501,3.087,551,2.609,597,2.252,598,2.252,620,2.609,621,3.555,622,3.418,625,3.752,626,3.752,662,1.731,663,4.043,664,3.087,665,3.087,666,3.812,667,3.812,668,3.812,669,3.812,670,3.087,671,3.812,672,4.634,673,3.812,674,3.812,675,3.812,676,3.812,677,3.812,678,3.812,679,4.634,680,4.634,681,3.812,682,3.812,683,3.812]],["title/index.html",[18,0.366,428,1.614,684,2.357]],["body/index.html",[0,0.75,3,0.508,8,0.526,12,0.989,20,1.119,23,0.044,28,0.441,31,0.441,33,2.261,34,1.725,35,0.534,36,0.769,37,1.65,45,0.572,55,0.83,56,1.267,58,0.024,59,0.024,73,1.251,94,1.441,98,1.48,102,0.943,108,0.943,112,0.83,119,0.441,122,0.732,136,0.933,148,1.251,155,0.732,163,0.572,169,1.48,182,1.08,183,0.83,185,2.743,203,2.261,204,1.48,206,1.48,234,1.911,240,3.162,250,0.943,263,1.957,264,2.223,266,1.48,267,2.743,268,2.596,274,1.251,276,1.48,277,2.002,280,1.357,286,1.251,287,2.241,288,1.441,291,1.251,292,1.911,296,1.08,298,1.251,301,1.267,332,2.261,334,1.911,337,1.48,338,1.48,345,2.241,361,1.911,371,2.796,375,1.48,385,2.743,390,1.251,405,3.308,412,2.596,413,1.911,437,2.596,471,1.48,473,1.251,475,2.743,476,2.743,477,3.362,484,1.48,493,1.48,505,1.48,511,2.261,516,3.628,520,1.48,521,1.48,522,1.48,528,1.48,531,1.48,533,1.65,534,2.743,545,1.48,551,2.319,562,3.308,585,2.743,586,1.48,588,1.911,597,1.08,598,1.08,604,2.319,605,1.48,618,3.308,645,2.261,653,1.48,664,1.48,665,1.48,670,4.199,685,2.792,686,2.792,687,2.792,688,1.828,689,1.828,690,5.185,691,4.83,692,1.828,693,1.828,694,2.792,695,2.792,696,2.792,697,2.792,698,2.792,699,2.792,700,2.792,701,2.792,702,2.792,703,2.792,704,2.792,705,2.792,706,2.792,707,2.792,708,1.828,709,2.792,710,2.792,711,1.828,712,1.828,713,4.619,714,4.306,715,2.792,716,1.828,717,1.828,718,2.792,719,1.828,720,4.48,721,2.261,722,1.828,723,2.792,724,2.743,725,1.828,726,1.828,727,1.828,728,1.828,729,1.828,730,1.828,731,1.828,732,1.828,733,1.828,734,1.828,735,1.828,736,1.828,737,1.828,738,1.828,739,1.828,740,2.792,741,1.828,742,1.828,743,1.828,744,1.828,745,1.828,746,1.828,747,1.828,748,1.828,749,1.828,750,1.828,751,1.828,752,1.828,753,1.828,754,1.828,755,2.792,756,1.828,757,1.828,758,1.828,759,1.828,760,1.828,761,1.828,762,1.828,763,1.828,764,1.828,765,1.828,766,1.828,767,2.792,768,2.261,769,1.828,770,1.828,771,2.792,772,2.792,773,1.828,774,1.828,775,1.828,776,1.828,777,1.828,778,1.828,779,1.828,780,1.828,781,1.828,782,2.792,783,1.828,784,1.828,785,1.828,786,1.48,787,2.792,788,1.828,789,1.828,790,3.387,791,2.792,792,2.792,793,2.792,794,2.792,795,2.792,796,3.387,797,4.48,798,1.828,799,1.828,800,1.828,801,1.828,802,3.387,803,3.387,804,1.828,805,1.828,806,2.792,807,2.792,808,1.828,809,1.828,810,2.792,811,1.828,812,1.828,813,2.792,814,1.828,815,1.828,816,1.828,817,1.828,818,1.828,819,2.792,820,1.828,821,1.828,822,1.828,823,1.828,824,1.828,825,1.828,826,1.828,827,2.792,828,1.828,829,1.828,830,1.828,831,1.828,832,1.828,833,1.828,834,1.828,835,2.792,836,2.792,837,1.828,838,1.828,839,1.828,840,1.828,841,1.828,842,1.828,843,1.828,844,1.828,845,1.828,846,1.828,847,1.828,848,3.387,849,1.828,850,1.828,851,2.792,852,4.48,853,1.828,854,1.828,855,1.828,856,1.828,857,1.828,858,1.828,859,1.828,860,1.828,861,1.828,862,1.828,863,1.828,864,1.828,865,1.828,866,1.828,867,1.48,868,2.792,869,2.792,870,3.387,871,1.828,872,1.828]],["title/modules.html",[60,1.525]],["body/modules.html",[23,0.043,58,0.043,59,0.043,60,1.748,61,2.578,70,2.252,77,2.987,296,2.578,873,4.363,874,4.363,875,5.02,876,4.363]],["title/overview.html",[877,3.083]],["body/overview.html",[0,0.589,1,1.711,23,0.048,30,0.69,39,1.521,47,1.373,49,1.558,51,1.373,54,1.373,58,0.04,59,0.04,60,1.852,61,3.366,62,2.243,63,2.598,64,3.073,65,2.598,66,3.073,67,3.073,68,3.073,69,3.073,70,2.572,71,3.164,72,3.073,73,2.598,94,1.959,178,1.344,250,2.386,280,1.521,507,2.598,877,3.073,878,3.073,879,3.073]],["title/routes.html",[94,1.965]],["body/routes.html",[23,0.044,58,0.044,59,0.044,94,2.304]],["title/miscellaneous/typealiases.html",[662,1.07,880,3.37]],["body/miscellaneous/typealiases.html",[18,0.672,22,0.788,23,0.043,58,0.043,59,0.043,144,2.003,161,2.392,281,2.559,282,2.953,662,1.966,881,4.331,882,4.331]],["title/miscellaneous/variables.html",[356,1.991,662,1.07]],["body/miscellaneous/variables.html",[18,0.272,20,2.183,22,0.869,23,0.05,24,2.169,25,2.466,35,0.541,38,2.025,52,1.033,58,0.023,59,0.023,85,0.906,119,0.653,136,1.256,144,1.914,153,2.986,155,2.025,157,2.986,159,2.609,161,2.294,163,1.58,250,1.705,304,2.823,307,1.201,308,1.599,334,1.201,345,1.951,356,1.037,387,3.005,507,1.201,533,1.951,543,2.26,588,1.201,620,1.201,621,3.121,622,3.459,627,4.2,628,2.674,629,2.674,630,2.674,631,2.674,632,2.674,639,1.421,640,3.431,641,1.421,642,1.421,643,2.674,662,0.796,663,3.575,721,1.421,724,1.421,768,1.421,786,1.421,867,2.191,878,1.421,879,1.421,883,2.705,884,1.754,885,1.754,886,1.754,887,1.754,888,2.705,889,1.754,890,1.754,891,1.754,892,2.705,893,1.754,894,1.754,895,1.754,896,1.754,897,1.754,898,1.754,899,1.754,900,1.754,901,1.754,902,3.302,903,1.754,904,1.754,905,1.754,906,1.754,907,1.754,908,1.754,909,1.754,910,1.754,911,1.754,912,1.754,913,1.754,914,1.754,915,1.754,916,1.754,917,1.754,918,1.754,919,1.754,920,1.754,921,5.054,922,5.054,923,3.711,924,4.01,925,1.754,926,1.754,927,1.754,928,1.754,929,1.754,930,1.754,931,1.754,932,2.705,933,1.754,934,1.754,935,1.754,936,1.754,937,1.754,938,2.705,939,1.754,940,1.754,941,1.754,942,1.754,943,1.754,944,4.236,945,3.711,946,1.754,947,1.754,948,3.302,949,1.754,950,2.705,951,1.754,952,1.754,953,1.754,954,1.754,955,2.705,956,1.754]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["0..5",{"_index":571,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["0..max",{"_index":681,"title":{},"body":{"miscellaneous/functions.html":{}}}],["0.8.26",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":540,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["02t03:47:07.045z",{"_index":595,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["02t03:47:07.045z&quot",{"_index":541,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["04t00:30:39.038z",{"_index":594,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["04t00:30:39.038z&quot",{"_index":539,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["08",{"_index":538,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["1",{"_index":588,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":724,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["128",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":375,"title":{},"body":{"components/MapViewPageComponent.html":{},"index.html":{}}}],["151.2043",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["151.2093",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["153",{"_index":270,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["153.015123",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["153.025123",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["153.025133",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["153.02809",{"_index":374,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["153.035123",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["153.045123",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["153.22",{"_index":221,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["153.24",{"_index":223,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["153.3",{"_index":306,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["180",{"_index":227,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["2",{"_index":250,"title":{},"body":{"injectables/GeoUtilityService.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.5.4",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["2.974956444218144",{"_index":224,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["20",{"_index":725,"title":{},"body":{"index.html":{}}}],["200",{"_index":401,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["2019",{"_index":593,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["24",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["27.1",{"_index":269,"title":{},"body":{"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["27.3",{"_index":219,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["27.32",{"_index":222,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["27.4497707",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.4597707",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.467907",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.46794",{"_index":373,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["27.4697707",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.4797707",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.4897707",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":878,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.141592653589793",{"_index":216,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["3.30.16",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":618,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["33",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["33.8688",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["365",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":879,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4/12",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":507,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5:30",{"_index":712,"title":{},"body":{"index.html":{}}}],["6",{"_index":721,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":849,"title":{},"body":{"index.html":{}}}],["6/9",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6371",{"_index":235,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["6372.8",{"_index":237,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["66",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80",{"_index":794,"title":{},"body":{"index.html":{}}}],["8601",{"_index":598,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["8601*_",{"_index":285,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["9",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9/13",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["_*iso",{"_index":284,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["abov",{"_index":847,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":774,"title":{},"body":{"index.html":{}}}],["accur",{"_index":823,"title":{},"body":{"index.html":{}}}],["accuraci",{"_index":232,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["achiev",{"_index":835,"title":{},"body":{"index.html":{}}}],["activatedrout",{"_index":113,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["activatedroute.snapshot.parammap.get('id",{"_index":146,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["actual_compon",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["ad",{"_index":334,"title":{},"body":{"components/MapViewPageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":361,"title":{},"body":{"components/MapViewPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["addit",{"_index":772,"title":{},"body":{"index.html":{}}}],["adipisc",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":309,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["algolia",{"_index":705,"title":{},"body":{"index.html":{}}}],["alias",{"_index":881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliqua",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliquip",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":838,"title":{},"body":{"index.html":{}}}],["alreadi",{"_index":789,"title":{},"body":{"index.html":{}}}],["altern",{"_index":694,"title":{},"body":{"index.html":{}}}],["amaz",{"_index":845,"title":{},"body":{"index.html":{}}}],["amet",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":720,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":95,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":831,"title":{},"body":{"index.html":{}}}],["api",{"_index":268,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["api.servic",{"_index":137,"title":{},"body":{"components/EventDetailComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["api.service.t",{"_index":453,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"coverage.html":{}}}],["api.service.ts:10",{"_index":464,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:114",{"_index":526,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:12",{"_index":542,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:135",{"_index":492,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:151",{"_index":536,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:177",{"_index":488,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:207",{"_index":467,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:227",{"_index":480,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:26",{"_index":496,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:46",{"_index":504,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:60",{"_index":519,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["api.service.ts:83",{"_index":530,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["app.compon",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app/compon",{"_index":776,"title":{},"body":{"index.html":{}}}],["app/models/trainingevent.t",{"_index":760,"title":{},"body":{"index.html":{}}}],["app/servic",{"_index":777,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":340,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["applic",{"_index":516,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["appmodul",{"_index":61,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":70,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":346,"title":{},"body":{"components/MapViewPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["array.sort",{"_index":478,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["artifact",{"_index":862,"title":{},"body":{"index.html":{}}}],["asquarehalfchordlengthtwopt",{"_index":248,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["associ",{"_index":335,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["assum",{"_index":474,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["asynchron",{"_index":548,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["authal",{"_index":231,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["automat",{"_index":856,"title":{},"body":{"index.html":{}}}],["avail",{"_index":296,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"index.html":{},"modules.html":{}}}],["availableseat",{"_index":157,"title":{},"body":{"components/EventDetailComponent.html":{},"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":753,"title":{},"body":{"index.html":{}}}],["aw",{"_index":743,"title":{},"body":{"index.html":{}}}],["away",{"_index":485,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["b",{"_index":768,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["base",{"_index":234,"title":{},"body":{"injectables/GeoUtilityService.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["be",{"_index":302,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["befor",{"_index":510,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["better",{"_index":586,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["between",{"_index":204,"title":{},"body":{"injectables/GeoUtilityService.html":{},"index.html":{}}}],["bonu",{"_index":804,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":494,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["bootstrap",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bound",{"_index":587,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["brisban",{"_index":304,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"components/MasterEventsListPageComponent.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/variables.html":{}}}],["brows",{"_index":875,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":385,"title":{},"body":{"components/MapViewPageComponent.html":{},"index.html":{}}}],["build",{"_index":691,"title":{},"body":{"index.html":{}}}],["c",{"_index":786,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cach",{"_index":502,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["calcul",{"_index":185,"title":{},"body":{"injectables/GeoUtilityService.html":{},"index.html":{}}}],["call",{"_index":357,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["cangulardistancetwoptsradian",{"_index":254,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["capac",{"_index":300,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["center",{"_index":370,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["chang",{"_index":858,"title":{},"body":{"index.html":{}}}],["check",{"_index":413,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"index.html":{}}}],["checkforev",{"_index":419,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["ci",{"_index":742,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":733,"title":{},"body":{"index.html":{}}}],["circl",{"_index":202,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["citi",{"_index":301,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"index.html":{}}}],["cityev",{"_index":577,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["cityloc",{"_index":417,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["class",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["cli",{"_index":848,"title":{},"body":{"index.html":{}}}],["click",{"_index":338,"title":{},"body":{"components/MapViewPageComponent.html":{},"index.html":{}}}],["closest",{"_index":472,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["cluster_appmodul",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":859,"title":{},"body":{"index.html":{}}}],["codepipelin",{"_index":744,"title":{},"body":{"index.html":{}}}],["commit",{"_index":814,"title":{},"body":{"index.html":{}}}],["commodo",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comparedatesoonest",{"_index":454,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["comparedatesoonest(givend",{"_index":465,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["compareupcomingeventlatest",{"_index":455,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["compareupcomingeventsoonest",{"_index":456,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["compareupcomingeventsoonest(givenev",{"_index":486,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["comparison",{"_index":468,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["comparisond",{"_index":466,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["comparisonev",{"_index":487,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["compat",{"_index":756,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'",{"_index":359,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["component_templ",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["components/ev",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/eventdetail",{"_index":783,"title":{},"body":{"index.html":{}}}],["components/eventlistitem",{"_index":781,"title":{},"body":{"index.html":{}}}],["concret",{"_index":432,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["confid",{"_index":830,"title":{},"body":{"index.html":{}}}],["config",{"_index":738,"title":{},"body":{"index.html":{}}}],["configur",{"_index":749,"title":{},"body":{"index.html":{}}}],["consectetur",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequat",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('​geolocationservic",{"_index":275,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["console.log('​geoutilityservic",{"_index":228,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["console.log('​mapviewpagecompon",{"_index":404,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["console.log('​mastereventslistpagecompon",{"_index":444,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["console.log('​mocktrainingeventapiservic",{"_index":567,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["const",{"_index":96,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"injectables/GeoUtilityService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["constrain",{"_index":829,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":120,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["constructor(activatedrout",{"_index":121,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["constructor(geolocationservic",{"_index":317,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["constructor(geoutilityservic",{"_index":463,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["constructor(publ",{"_index":547,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["constructor(rout",{"_index":171,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["constructor(trainingeventapiservic",{"_index":421,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["contain",{"_index":806,"title":{},"body":{"index.html":{}}}],["content",{"_index":393,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["contenthtml",{"_index":395,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["context",{"_index":643,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":739,"title":{},"body":{"index.html":{}}}],["convert",{"_index":143,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/GeoUtilityService.html":{}}}],["coord",{"_index":396,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["coordin",{"_index":305,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{}}}],["core",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["cours",{"_index":808,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":604,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creat",{"_index":405,"title":{},"body":{"components/MapViewPageComponent.html":{},"index.html":{}}}],["credit",{"_index":841,"title":{},"body":{"index.html":{}}}],["current",{"_index":473,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["custom",{"_index":596,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["d",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":562,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["data_description_placeholder_text",{"_index":627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data_seed_training_ev",{"_index":543,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":288,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["datetim",{"_index":155,"title":{},"body":{"components/EventDetailComponent.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["daysperyear",{"_index":628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["declar",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"components/MapViewPageComponent.html":{},"overview.html":{}}}],["decompos",{"_index":666,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decor",{"_index":348,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["default",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/GeolocationService.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["degre",{"_index":193,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["degreestoradian",{"_index":187,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["degreestoradians(degre",{"_index":190,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["delay",{"_index":552,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["depend",{"_index":62,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":687,"title":{},"body":{"index.html":{}}}],["descript",{"_index":163,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/GeoUtilityService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["detail",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/MapViewPageComponent.html":{},"index.html":{}}}],["detail'},{'nam",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["detail.compon",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":111,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.scss",{"_index":110,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.t",{"_index":107,"title":{},"body":{"components/EventDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:13",{"_index":123,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:15",{"_index":132,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:16",{"_index":133,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":130,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":128,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail/ev",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"coverage.html":{}}}],["dev",{"_index":854,"title":{},"body":{"index.html":{}}}],["develop",{"_index":850,"title":{},"body":{"index.html":{}}}],["differ",{"_index":233,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["difflat",{"_index":242,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["difflon",{"_index":245,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["dir=\"dist/userlocationtrainingeventmaprecommend",{"_index":693,"title":{},"body":{"index.html":{}}}],["direct",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":861,"title":{},"body":{"index.html":{}}}],["directori",{"_index":819,"title":{},"body":{"index.html":{}}}],["disambigu",{"_index":297,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["discov",{"_index":716,"title":{},"body":{"index.html":{}}}],["display",{"_index":534,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["dist",{"_index":864,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":203,"title":{},"body":{"injectables/GeoUtilityService.html":{},"index.html":{}}}],["distant",{"_index":481,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["docker",{"_index":740,"title":{},"body":{"index.html":{}}}],["document",{"_index":605,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dolor",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["doubl",{"_index":711,"title":{},"body":{"index.html":{}}}],["dryrun",{"_index":764,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.g",{"_index":287,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"index.html":{}}}],["e2",{"_index":792,"title":{},"body":{"index.html":{}}}],["ea",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":377,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["earth",{"_index":209,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["easili",{"_index":839,"title":{},"body":{"index.html":{}}}],["eg",{"_index":832,"title":{},"body":{"index.html":{}}}],["eiusmod",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["elit",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emerg",{"_index":718,"title":{},"body":{"index.html":{}}}],["encapsul",{"_index":435,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["end",{"_index":797,"title":{},"body":{"index.html":{}}}],["enim",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environ",{"_index":640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epoch",{"_index":668,"title":{},"body":{"miscellaneous/functions.html":{}}}],["es6",{"_index":811,"title":{},"body":{"index.html":{}}}],["estim",{"_index":710,"title":{},"body":{"index.html":{}}}],["et",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["event'",{"_index":809,"title":{},"body":{"index.html":{}}}],["event.t",{"_index":282,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["eventapi",{"_index":127,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["eventapi.geteventbyid(+eventid",{"_index":150,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["eventdetail",{"_index":782,"title":{},"body":{"index.html":{}}}],["eventdetailcompon",{"_index":47,"title":{"components/EventDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventfilterhasc",{"_index":457,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["eventfilterhascity(trainingev",{"_index":490,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["eventid",{"_index":147,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["eventidparam",{"_index":145,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["eventinfowindow",{"_index":402,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["eventinfowindow.open(googlemap",{"_index":409,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["eventinfowindowopt",{"_index":398,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["eventisatc",{"_index":579,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["eventlistitem",{"_index":780,"title":{},"body":{"index.html":{}}}],["eventlistitemcompon",{"_index":49,"title":{"components/EventListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["events.filter((trainingev",{"_index":578,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["events.t",{"_index":621,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["events/details/:id",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["events/map",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["eventscheck",{"_index":451,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["ex",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exampl",{"_index":186,"title":{},"body":{"injectables/GeoUtilityService.html":{},"interfaces/LocationCoordinatePt.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{}}}],["execut",{"_index":868,"title":{},"body":{"index.html":{}}}],["exercit",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["explicit",{"_index":423,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["explicitli",{"_index":386,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["export",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"overview.html":{}}}],["extend",{"_index":397,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["extra",{"_index":840,"title":{},"body":{"index.html":{}}}],["f",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fals",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feel",{"_index":828,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":493,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["finalis",{"_index":731,"title":{},"body":{"index.html":{}}}],["first",{"_index":569,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["firstgivenev",{"_index":602,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["five",{"_index":505,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["flag",{"_index":866,"title":{},"body":{"index.html":{}}}],["format",{"_index":286,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"index.html":{}}}],["formula",{"_index":200,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["found",{"_index":730,"title":{},"body":{"index.html":{}}}],["foundtrainingev",{"_index":556,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["framework",{"_index":802,"title":{},"body":{"index.html":{}}}],["front",{"_index":796,"title":{},"body":{"index.html":{}}}],["fulfil",{"_index":532,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["full",{"_index":102,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["fun",{"_index":732,"title":{},"body":{"index.html":{}}}],["function",{"_index":183,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/GeoUtilityService.html":{},"injectables/MockTrainingEventApiService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["further",{"_index":484,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["futur",{"_index":469,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gener",{"_index":477,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["generatefuturedateiso8601",{"_index":622,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["geo",{"_index":545,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["geograph",{"_index":589,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["geoloc",{"_index":267,"title":{},"body":{"injectables/GeolocationService.html":{},"index.html":{}}}],["geolocationservic",{"_index":225,"title":{"injectables/GeolocationService.html":{}},"body":{"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"coverage.html":{}}}],["geospati",{"_index":184,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["geoutilityservic",{"_index":179,"title":{"injectables/GeoUtilityService.html":{}},"body":{"injectables/GeoUtilityService.html":{},"injectables/MockTrainingEventApiService.html":{},"coverage.html":{}}}],["get",{"_index":428,"title":{"index.html":{}},"body":{"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["getdistancekilometresbetweencoordin",{"_index":188,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["getdistancekilometresbetweencoordinates(pt1",{"_index":195,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["getev",{"_index":459,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["geteventbyid",{"_index":458,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["geteventbyid(id",{"_index":495,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["geteventinform",{"_index":116,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["geteventinformation(activatedrout",{"_index":126,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["getevents(numev",{"_index":503,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["getmostrecentupcomingev",{"_index":366,"title":{},"body":{"components/MapViewPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["getmostrecentupcomingevents(numeventsw",{"_index":518,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["getmostrecentupcomingeventsclosesttocoordin",{"_index":460,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["getmostrecentupcomingeventsclosesttocoordinates(coordin",{"_index":525,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["getmostrecentupcomingeventsnumsliceincityloc",{"_index":461,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["getmostrecentupcomingeventsnumsliceincitylocation(cityloc",{"_index":443,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["getmostrecentupcomingeventsnumsliceincitylocation(locationcitynam",{"_index":529,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["getrandomfutureepoch",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrandomfutureepoch(givencurrentdatetimeepoch",{"_index":675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrandomint(maxepochsecond",{"_index":677,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getuserloc",{"_index":260,"title":{},"body":{"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["git",{"_index":818,"title":{},"body":{"index.html":{}}}],["github",{"_index":699,"title":{},"body":{"index.html":{}}}],["given",{"_index":149,"title":{},"body":{"components/EventDetailComponent.html":{},"miscellaneous/functions.html":{}}}],["givencurrentdatetimeepoch",{"_index":676,"title":{},"body":{"miscellaneous/functions.html":{}}}],["givend",{"_index":479,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["givenev",{"_index":489,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["givenlocationcitynam",{"_index":491,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["gmapel",{"_index":312,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["go",{"_index":871,"title":{},"body":{"index.html":{}}}],["go1",{"_index":795,"title":{},"body":{"index.html":{}}}],["googl",{"_index":345,"title":{},"body":{"components/MapViewPageComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google.maps.infowindow",{"_index":403,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["google.maps.infowindowopt",{"_index":399,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["google.maps.latlng",{"_index":372,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["google.maps.map",{"_index":325,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["google.maps.map(this.gmapelement.nativeel",{"_index":376,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["google.maps.mapopt",{"_index":369,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["google.maps.mark",{"_index":342,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["google.maps.marker(markeropt",{"_index":406,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["google.maps.markeropt",{"_index":389,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["googlemap",{"_index":339,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["graph",{"_index":876,"title":{},"body":{"modules.html":{}}}],["great",{"_index":201,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["h",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["happen",{"_index":470,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["hashtag",{"_index":354,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["haversin",{"_index":199,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["held",{"_index":303,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["help",{"_index":870,"title":{},"body":{"index.html":{}}}],["helper",{"_index":192,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["here",{"_index":390,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"index.html":{}}}],["hn",{"_index":704,"title":{},"body":{"index.html":{}}}],["honest",{"_index":822,"title":{},"body":{"index.html":{}}}],["hour",{"_index":728,"title":{},"body":{"index.html":{}}}],["hoursperday",{"_index":629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["href",{"_index":692,"title":{},"body":{"index.html":{}}}],["html",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["html5",{"_index":266,"title":{},"body":{"injectables/GeolocationService.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":855,"title":{},"body":{"index.html":{}}}],["http://via.placeholder.com/100x100",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.movabl",{"_index":211,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["https://github.com/definitelytyped/definitelytyped/issues/30310",{"_index":722,"title":{},"body":{"index.html":{}}}],["https://slimlime.github.io/us",{"_index":688,"title":{},"body":{"index.html":{}}}],["i.",{"_index":765,"title":{},"body":{"index.html":{}}}],["id",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/variables.html":{}}}],["ideal",{"_index":508,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["identifi",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":292,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"index.html":{}}}],["imageurl",{"_index":153,"title":{},"body":{"components/EventDetailComponent.html":{},"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":108,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"index.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["impress",{"_index":843,"title":{},"body":{"index.html":{}}}],["incididunt",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includ",{"_index":813,"title":{},"body":{"index.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["industri",{"_index":824,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{}}}],["inform",{"_index":148,"title":{},"body":{"components/EventDetailComponent.html":{},"components/MapViewPageComponent.html":{},"index.html":{}}}],["infowindow",{"_index":336,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["initi",{"_index":360,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["initmap",{"_index":313,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["inject",{"_index":178,"title":{"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"injectables/MockTrainingEventApiService.html":{}},"body":{"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"injectables/MockTrainingEventApiService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":118,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["instal",{"_index":758,"title":{},"body":{"index.html":{}}}],["instead",{"_index":698,"title":{},"body":{"index.html":{}}}],["integ",{"_index":678,"title":{},"body":{"miscellaneous/functions.html":{}}}],["integr",{"_index":771,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":280,"title":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["ionic",{"_index":778,"title":{},"body":{"index.html":{}}}],["ipsum",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iso",{"_index":597,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["isostr",{"_index":669,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issu",{"_index":700,"title":{},"body":{"index.html":{}}}],["item",{"_index":166,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["item'},{'nam",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["item.compon",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.html",{"_index":168,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["item.component.scss",{"_index":167,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["item.component.t",{"_index":165,"title":{},"body":{"components/EventListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:12",{"_index":172,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["item.component.ts:13",{"_index":176,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["item.component.ts:17",{"_index":175,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["item.component.ts:20",{"_index":174,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["item/ev",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"components/EventListItemComponent.html":{},"coverage.html":{}}}],["j",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jasmin",{"_index":723,"title":{},"body":{"index.html":{}}}],["jasmine/typescript",{"_index":754,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":801,"title":{},"body":{"index.html":{}}}],["journal",{"_index":696,"title":{},"body":{"index.html":{}}}],["js",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":791,"title":{},"body":{"index.html":{}}}],["kilometr",{"_index":230,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["labor",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labori",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["larger",{"_index":483,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["lat",{"_index":381,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["later",{"_index":392,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["latest",{"_index":522,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["latitud",{"_index":218,"title":{},"body":{"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["lean",{"_index":695,"title":{},"body":{"index.html":{}}}],["legend",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"overview.html":{}}}],["less",{"_index":239,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["lexicograph",{"_index":599,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["librari",{"_index":836,"title":{},"body":{"index.html":{}}}],["list",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"coverage.html":{},"index.html":{}}}],["lng",{"_index":383,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["load",{"_index":321,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["local",{"_index":290,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"components/MasterEventsListPageComponent.html":{},"interfaces/TrainingEvent.html":{}}}],["locat",{"_index":264,"title":{},"body":{"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["location/ev",{"_index":842,"title":{},"body":{"index.html":{}}}],["locationcitynam",{"_index":159,"title":{},"body":{"components/EventDetailComponent.html":{},"interfaces/LocationCoordinatePt.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/variables.html":{}}}],["locationcoordin",{"_index":161,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["locationcoordinatept",{"_index":196,"title":{"interfaces/LocationCoordinatePt.html":{}},"body":{"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{}}}],["log",{"_index":697,"title":{},"body":{"index.html":{}}}],["logic",{"_index":436,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["long",{"_index":821,"title":{},"body":{"index.html":{}}}],["longitud",{"_index":220,"title":{},"body":{"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["lorem",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["magna",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":475,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["manag",{"_index":702,"title":{},"body":{"index.html":{}}}],["map",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["mapprop",{"_index":368,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["mapviewpag",{"_index":784,"title":{},"body":{"index.html":{}}}],["mapviewpagecompon",{"_index":51,"title":{"components/MapViewPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marker",{"_index":332,"title":{},"body":{"components/MapViewPageComponent.html":{},"index.html":{}}}],["marker.addlisten",{"_index":407,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["markerclickdata",{"_index":408,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["markercoordin",{"_index":380,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["markeropt",{"_index":388,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["master",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"index.html":{}}}],["mastereventslistpag",{"_index":98,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["mastereventslistpagecompon",{"_index":54,"title":{"components/MasterEventsListPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["match",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.atan2",{"_index":255,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["math.cos(this.degreestoradians(pt1.latitud",{"_index":251,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["math.cos(this.degreestoradians(pt2.latitud",{"_index":252,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["math.pi",{"_index":226,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["math.sin(difflat",{"_index":249,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["math.sin(difflon",{"_index":253,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["math.sqrt(1",{"_index":257,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["math.sqrt(asquarehalfchordlengthtwopt",{"_index":256,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["max",{"_index":679,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxepochsecond",{"_index":682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxwidth",{"_index":400,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["mayb",{"_index":585,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["melbourn",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memberof",{"_index":142,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["method",{"_index":115,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["microsoft",{"_index":747,"title":{},"body":{"index.html":{}}}],["millisecondspersecond",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["minim",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minut",{"_index":713,"title":{},"body":{"index.html":{}}}],["minutesperhour",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["miscellan",{"_index":662,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":551,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["mocktrainingeventapiservic",{"_index":122,"title":{"injectables/MockTrainingEventApiService.html":{}},"body":{"components/EventDetailComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"coverage.html":{},"index.html":{}}}],["model",{"_index":759,"title":{},"body":{"index.html":{}}}],["models/train",{"_index":134,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["models/trainingev",{"_index":761,"title":{},"body":{"index.html":{}}}],["modul",{"_index":60,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":476,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["mostrecentev",{"_index":565,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["mostrecentevents.slice(undefin",{"_index":574,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["mostrecenteventsnextnumslic",{"_index":573,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["mostrecenteventsnextslic",{"_index":575,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["mostrecentupcomingcityev",{"_index":581,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["mostrecentupcomingcityeventsnumslic",{"_index":583,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["move",{"_index":671,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navig",{"_index":787,"title":{},"body":{"index.html":{}}}],["navigatetoeventdetail",{"_index":170,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["navigatetoeventdetail(rout",{"_index":173,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["navigator.geoloc",{"_index":272,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["navigator.geolocation.getcurrentposition((posit",{"_index":273,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["near",{"_index":414,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["need",{"_index":437,"title":{},"body":{"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["network",{"_index":553,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["new",{"_index":371,"title":{},"body":{"components/MapViewPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":520,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["ng",{"_index":690,"title":{},"body":{"index.html":{}}}],["ngaftercontentinit",{"_index":358,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["ngafterviewinit",{"_index":314,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["ngh",{"_index":686,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":117,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["nisi",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nostrud",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":751,"title":{},"body":{"index.html":{}}}],["novemb",{"_index":719,"title":{},"body":{"index.html":{}}}],["now",{"_index":482,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["npm",{"_index":757,"title":{},"body":{"index.html":{}}}],["num",{"_index":590,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["number",{"_index":144,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/GeoUtilityService.html":{},"interfaces/LocationCoordinatePt.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["numev",{"_index":506,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["numevents=5",{"_index":559,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["numeventsw",{"_index":523,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["numeventswanted=5",{"_index":563,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["object",{"_index":387,"title":{},"body":{"components/MapViewPageComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":550,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["oninit",{"_index":109,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["onto",{"_index":341,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["open",{"_index":337,"title":{},"body":{"components/MapViewPageComponent.html":{},"index.html":{}}}],["option",{"_index":125,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":521,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["otherwis",{"_index":512,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["out",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["over",{"_index":208,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["overview",{"_index":877,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":645,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":752,"title":{},"body":{"index.html":{}}}],["page",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"index.html":{}}}],["page'},{'nam",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["page.compon",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":311,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["page.component.scss",{"_index":310,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["page.component.t",{"_index":308,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["page.component.ts:141",{"_index":319,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["page.component.ts:16",{"_index":350,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["page.component.ts:17",{"_index":318,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["page.component.ts:20",{"_index":347,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["page.component.ts:21",{"_index":351,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["page.component.ts:22",{"_index":430,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["page.component.ts:23",{"_index":429,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["page.component.ts:26",{"_index":327,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["page.component.ts:28",{"_index":425,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["page.component.ts:30",{"_index":326,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["page.component.ts:45",{"_index":427,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["page.component.ts:48",{"_index":323,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["page.component.ts:63",{"_index":424,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["page.component.ts:65",{"_index":344,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["page.component.ts:74",{"_index":422,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["page.component.ts:82",{"_index":329,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["page/map",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapViewPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["page/mast",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MasterEventsListPageComponent.html":{},"coverage.html":{}}}],["pages/map",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/mapviewpag",{"_index":785,"title":{},"body":{"index.html":{}}}],["pages/mast",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/mastereventslistpag",{"_index":779,"title":{},"body":{"index.html":{}}}],["pagin",{"_index":706,"title":{},"body":{"index.html":{}}}],["param",{"_index":141,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/GeoUtilityService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["paramet",{"_index":124,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":667,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pass",{"_index":433,"title":{},"body":{"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["path",{"_index":99,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":101,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["place",{"_index":295,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["plan",{"_index":685,"title":{},"body":{"index.html":{}}}],["plot",{"_index":333,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["plotuserloc",{"_index":411,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["point",{"_index":206,"title":{},"body":{"injectables/GeoUtilityService.html":{},"index.html":{}}}],["popul",{"_index":438,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["populatetrainingeventsinc",{"_index":420,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["populatetrainingeventsincity(cityloc",{"_index":426,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["populatetrainingeventsnearuserlocation(userloc",{"_index":446,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["popup",{"_index":727,"title":{},"body":{"index.html":{}}}],["posit",{"_index":274,"title":{},"body":{"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"index.html":{}}}],["position.coord",{"_index":279,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["precis",{"_index":238,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["process",{"_index":561,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["prod",{"_index":865,"title":{},"body":{"index.html":{}}}],["product",{"_index":867,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":714,"title":{},"body":{"index.html":{}}}],["promis",{"_index":549,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["properli",{"_index":726,"title":{},"body":{"index.html":{}}}],["properti",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{}}}],["propos",{"_index":708,"title":{},"body":{"index.html":{}}}],["protractor",{"_index":793,"title":{},"body":{"index.html":{}}}],["provid",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeoUtilityService.html":{},"overview.html":{}}}],["providedin",{"_index":214,"title":{},"body":{"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["provider/servic",{"_index":673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pt1",{"_index":213,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["pt1.latitud",{"_index":244,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["pt1.longitud",{"_index":247,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["pt2",{"_index":197,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["public",{"_index":112,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["qui",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quickli",{"_index":826,"title":{},"body":{"index.html":{}}}],["quot;2019",{"_index":537,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["radian",{"_index":194,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["radiu",{"_index":229,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["random",{"_index":672,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rang",{"_index":680,"title":{},"body":{"miscellaneous/functions.html":{}}}],["react",{"_index":827,"title":{},"body":{"index.html":{}}}],["reactiv",{"_index":434,"title":{},"body":{"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["readm",{"_index":872,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":283,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["recent",{"_index":527,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["recommend",{"_index":689,"title":{},"body":{"index.html":{}}}],["record",{"_index":820,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":97,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectto",{"_index":100,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refer",{"_index":355,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["regularli",{"_index":816,"title":{},"body":{"index.html":{}}}],["relev",{"_index":528,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["reload",{"_index":857,"title":{},"body":{"index.html":{}}}],["remain",{"_index":299,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["repeat",{"_index":734,"title":{},"body":{"index.html":{}}}],["repo",{"_index":707,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":815,"title":{},"body":{"index.html":{}}}],["repres",{"_index":293,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["request",{"_index":554,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["requir",{"_index":533,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":717,"title":{},"body":{"index.html":{}}}],["respons",{"_index":320,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["result",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":511,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["retrieve/select",{"_index":524,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["return",{"_index":129,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["root'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["rout",{"_index":94,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":169,"title":{},"body":{"components/EventListItemComponent.html":{},"index.html":{}}}],["router.navigate(['events/detail",{"_index":177,"title":{},"body":{"components/EventListItemComponent.html":{}}}],["routermodul",{"_index":93,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":92,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rradiusofearthkm",{"_index":241,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["rule",{"_index":746,"title":{},"body":{"index.html":{}}}],["run",{"_index":852,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["samecitynamefound",{"_index":592,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["scaffold",{"_index":860,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":799,"title":{},"body":{"index.html":{}}}],["sdl",{"_index":748,"title":{},"body":{"index.html":{}}}],["search",{"_index":498,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["seat",{"_index":298,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"index.html":{}}}],["secondcomparisonev",{"_index":603,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["secondsperminut",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sed",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seed",{"_index":664,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["seed/se",{"_index":544,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["seed/seedtrainingev",{"_index":762,"title":{},"body":{"index.html":{}}}],["seedtestdata",{"_index":555,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["seedtestdata.find",{"_index":557,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["select",{"_index":513,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["send",{"_index":817,"title":{},"body":{"index.html":{}}}],["sens",{"_index":770,"title":{},"body":{"index.html":{}}}],["separ",{"_index":501,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"miscellaneous/functions.html":{}}}],["serv",{"_index":853,"title":{},"body":{"index.html":{}}}],["server",{"_index":851,"title":{},"body":{"index.html":{}}}],["servic",{"_index":277,"title":{},"body":{"injectables/GeolocationService.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["services/geoloc",{"_index":766,"title":{},"body":{"index.html":{}}}],["services/geolocation.servic",{"_index":353,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["services/mock",{"_index":135,"title":{},"body":{"components/EventDetailComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["services/mocktrainingeventapi",{"_index":763,"title":{},"body":{"index.html":{}}}],["services/userloc",{"_index":773,"title":{},"body":{"index.html":{}}}],["set",{"_index":330,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["setmap",{"_index":391,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["setup",{"_index":324,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["setuptrainingeventmark",{"_index":315,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["setuptrainingeventmarker(googlemap",{"_index":328,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["setuptrainingeventsmark",{"_index":316,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["setuptrainingeventsmarkers(googlemap",{"_index":343,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["shortest",{"_index":207,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["show",{"_index":807,"title":{},"body":{"index.html":{}}}],["simpler",{"_index":431,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["sit",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":570,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["slice(undefin",{"_index":584,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["slim",{"_index":800,"title":{},"body":{"index.html":{}}}],["someth",{"_index":844,"title":{},"body":{"index.html":{}}}],["soonest",{"_index":471,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["sort",{"_index":509,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["sorteventsdatetimesoonest",{"_index":462,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["sorteventsdatetimesoonest(ev",{"_index":535,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"index.html":{}}}],["spec\\.t",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":497,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["specifi",{"_index":568,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["src/.../environment.prod.t",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seed",{"_index":663,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../train",{"_index":882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":91,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/ev",{"_index":106,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"coverage.html":{}}}],["src/app/models/train",{"_index":281,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/map",{"_index":307,"title":{},"body":{"components/MapViewPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/mast",{"_index":416,"title":{},"body":{"components/MasterEventsListPageComponent.html":{},"coverage.html":{}}}],["src/app/seed/se",{"_index":620,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/geo",{"_index":180,"title":{},"body":{"injectables/GeoUtilityService.html":{},"coverage.html":{}}}],["src/app/services/geolocation.service.t",{"_index":258,"title":{},"body":{"injectables/GeolocationService.html":{},"coverage.html":{}}}],["src/app/services/geolocation.service.ts:12",{"_index":261,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["src/app/services/geolocation.service.ts:21",{"_index":262,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["src/app/services/geolocation.service.ts:9",{"_index":271,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["src/app/services/mock",{"_index":452,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":639,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":642,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":265,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["start",{"_index":684,"title":{"index.html":{}},"body":{}}],["statement",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":674,"title":{},"body":{"miscellaneous/functions.html":{}}}],["store",{"_index":863,"title":{},"body":{"index.html":{}}}],["string",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{}}}],["structur",{"_index":715,"title":{},"body":{"index.html":{}}}],["studio",{"_index":736,"title":{},"body":{"index.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["style=scss",{"_index":750,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["such",{"_index":767,"title":{},"body":{"index.html":{}}}],["suggest",{"_index":825,"title":{},"body":{"index.html":{}}}],["suppli",{"_index":803,"title":{},"body":{"index.html":{}}}],["support",{"_index":873,"title":{},"body":{"modules.html":{}}}],["surfac",{"_index":210,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["svg",{"_index":874,"title":{},"body":{"modules.html":{}}}],["sydney",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tab",{"_index":703,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":515,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":709,"title":{},"body":{"index.html":{}}}],["tdd",{"_index":788,"title":{},"body":{"index.html":{}}}],["tech",{"_index":798,"title":{},"body":{"index.html":{}}}],["temp",{"_index":500,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["tempor",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":670,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["that'",{"_index":846,"title":{},"body":{"index.html":{}}}],["this.degreestoradians(180",{"_index":215,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["this.degreestoradians(pt2.latitud",{"_index":243,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["this.degreestoradians(pt2.longitud",{"_index":246,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["this.eventfilterhascity(trainingev",{"_index":580,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["this.geolocationservice.getuserloc",{"_index":410,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["this.getdistancekilometresbetweencoordin",{"_index":217,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["this.getev",{"_index":576,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["this.geteventinformation(this.activatedrout",{"_index":138,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.getevents(numeventsw",{"_index":564,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["this.getuserloc",{"_index":447,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["this.initmap",{"_index":363,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["this.map",{"_index":362,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["this.populatetrainingeventsincity('brisban",{"_index":448,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["this.populatetrainingeventsincity(this.cityloc",{"_index":440,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["this.setuptrainingeventmarker(googlemap",{"_index":379,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["this.setuptrainingeventsmarkers(this.map",{"_index":367,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["this.sorteventsdatetimesoonest(cityev",{"_index":582,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["this.sorteventsdatetimesoonest(ev",{"_index":566,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["this.trainingev",{"_index":140,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.trainingeventapiservic",{"_index":139,"title":{},"body":{"components/EventDetailComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["this.trainingeventapiservice.geteventbyid(1",{"_index":364,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["this.upcomingtrainingev",{"_index":441,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["this.userloc",{"_index":278,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["time",{"_index":665,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["titl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"interfaces/TrainingEvent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":499,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"miscellaneous/functions.html":{}}}],["toisostr",{"_index":289,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["top",{"_index":683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tracking/project",{"_index":701,"title":{},"body":{"index.html":{}}}],["train",{"_index":136,"title":{},"body":{"components/EventDetailComponent.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trainingev",{"_index":119,"title":{"interfaces/TrainingEvent.html":{}},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trainingevent.availableseat",{"_index":158,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{}}}],["trainingevent.datetim",{"_index":156,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{}}}],["trainingevent.descript",{"_index":164,"title":{},"body":{"components/EventDetailComponent.html":{},"components/MapViewPageComponent.html":{}}}],["trainingevent.id",{"_index":151,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["trainingevent.imageurl",{"_index":154,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["trainingevent.locationcitynam",{"_index":160,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["trainingevent.locationcoordin",{"_index":162,"title":{},"body":{"components/EventDetailComponent.html":{},"components/MapViewPageComponent.html":{}}}],["trainingevent.locationcoordinates[0",{"_index":382,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["trainingevent.locationcoordinates[1",{"_index":384,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["trainingevent.titl",{"_index":152,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{}}}],["trainingeventapiservic",{"_index":114,"title":{},"body":{"components/EventDetailComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["trainingeventcitynam",{"_index":591,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["trainingevents.foreach((trainingev",{"_index":378,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["trainingevents.sort",{"_index":601,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["trainingeventsanyloc",{"_index":365,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["trainingeventssortedsoonest",{"_index":600,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["trainingidfound",{"_index":558,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["transpil",{"_index":810,"title":{},"body":{"index.html":{}}}],["travi",{"_index":741,"title":{},"body":{"index.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["true",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslint",{"_index":745,"title":{},"body":{"index.html":{}}}],["turfj",{"_index":837,"title":{},"body":{"index.html":{}}}],["two",{"_index":205,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"injectables/GeoUtilityService.html":{},"injectables/GeolocationService.html":{},"interfaces/LocationCoordinatePt.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"interfaces/TrainingEvent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.co.uk/scripts/latlong.html",{"_index":212,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["typealias",{"_index":880,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/googlemap",{"_index":653,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ullamco",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined,5",{"_index":572,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["unintend",{"_index":729,"title":{},"body":{"index.html":{}}}],["unit",{"_index":790,"title":{},"body":{"index.html":{}}}],["unus",{"_index":560,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["up",{"_index":331,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["upcom",{"_index":449,"title":{},"body":{"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["upcomingeventsrecentatc",{"_index":439,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["upcomingsortedeventsatbrisban",{"_index":445,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["upcomingsortedeventsatc",{"_index":442,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["upcomingtrainingev",{"_index":418,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["updat",{"_index":276,"title":{},"body":{"injectables/GeolocationService.html":{},"index.html":{}}}],["url",{"_index":291,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{},"index.html":{}}}],["us",{"_index":240,"title":{},"body":{"injectables/GeoUtilityService.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["usag",{"_index":517,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["user",{"_index":263,"title":{},"body":{"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["user'",{"_index":531,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{},"index.html":{}}}],["userloc",{"_index":259,"title":{},"body":{"injectables/GeolocationService.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["userlocationtrainingeventmaprecommend",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ut",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["util",{"_index":182,"title":{},"body":{"injectables/GeoUtilityService.html":{},"injectables/MockTrainingEventApiService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["utility.servic",{"_index":546,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["utility.service.t",{"_index":181,"title":{},"body":{"injectables/GeoUtilityService.html":{},"coverage.html":{}}}],["utility.service.ts:14",{"_index":189,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["utility.service.ts:37",{"_index":191,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["utility.service.ts:52",{"_index":198,"title":{},"body":{"injectables/GeoUtilityService.html":{}}}],["valu",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/GeolocationService.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["variabl",{"_index":356,"title":{"miscellaneous/variables.html":{}},"body":{"components/MapViewPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["veniam",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":755,"title":{},"body":{"index.html":{}}}],["via",{"_index":869,"title":{},"body":{"index.html":{}}}],["via.placeholder.com/100x100",{"_index":294,"title":{},"body":{"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["view",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":352,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["viewchild('gmap",{"_index":349,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["violat",{"_index":322,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{}}}],["visual",{"_index":735,"title":{},"body":{"index.html":{}}}],["void",{"_index":131,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListItemComponent.html":{},"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"injectables/MockTrainingEventApiService.html":{}}}],["vs",{"_index":236,"title":{},"body":{"injectables/GeoUtilityService.html":{},"interfaces/LocationCoordinatePt.html":{},"interfaces/TrainingEvent.html":{}}}],["vue",{"_index":833,"title":{},"body":{"index.html":{}}}],["web",{"_index":775,"title":{},"body":{"index.html":{}}}],["welcom",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["well",{"_index":769,"title":{},"body":{"index.html":{}}}],["whatev",{"_index":834,"title":{},"body":{"index.html":{}}}],["whole",{"_index":514,"title":{},"body":{"injectables/MockTrainingEventApiService.html":{}}}],["window",{"_index":394,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["wish",{"_index":805,"title":{},"body":{"index.html":{}}}],["work",{"_index":412,"title":{},"body":{"components/MapViewPageComponent.html":{},"components/MasterEventsListPageComponent.html":{},"index.html":{}}}],["works!check",{"_index":415,"title":{},"body":{"components/MapViewPageComponent.html":{}}}],["works!upcom",{"_index":450,"title":{},"body":{"components/MasterEventsListPageComponent.html":{}}}],["workspac",{"_index":737,"title":{},"body":{"index.html":{}}}],["you'll",{"_index":812,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"components/MapViewPageComponent.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n\n  \n    Welcome to UserLocationTrainingEventMapRecommendations!\n  \n\n\n\n  \n    \n      Map\n    \n  \n  \n    \n      Events list\n    \n  \n    \n      Event details by id\n    \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Welcome to UserLocationTrainingEventMapRecommendations!              Map                  Events list                Event details by id      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventDetailComponent', 'selector': 'app-event-detail'},{'name': 'EventListItemComponent', 'selector': 'app-event-list-item'},{'name': 'MapViewPageComponent', 'selector': 'app-map-view-page'},{'name': 'MasterEventsListPageComponent', 'selector': 'app-master-events-list-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEventDetailComponent\n\nEventDetailComponent\n\nAppModule -->\n\nEventDetailComponent->AppModule\n\n\n\n\n\nEventListItemComponent\n\nEventListItemComponent\n\nAppModule -->\n\nEventListItemComponent->AppModule\n\n\n\n\n\nMapViewPageComponent\n\nMapViewPageComponent\n\nAppModule -->\n\nMapViewPageComponent->AppModule\n\n\n\n\n\nMasterEventsListPageComponent\n\nMasterEventsListPageComponent\n\nAppModule -->\n\nMasterEventsListPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                EventDetailComponent\n                            \n                            \n                                EventListItemComponent\n                            \n                            \n                                MapViewPageComponent\n                            \n                            \n                                MasterEventsListPageComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MasterEventsListPageComponent } from './pages/master-events-list-page/master-events-list-page.component';\nimport { MapViewPageComponent } from './pages/map-view-page/map-view-page.component';\nimport { EventDetailComponent } from './components/event-detail/event-detail.component';\nimport { EventListItemComponent } from './components/event-list-item/event-list-item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MasterEventsListPageComponent,\n    MapViewPageComponent,\n    EventDetailComponent,\n    EventListItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { EventDetailComponent } from './components/event-detail/event-detail.component';\nimport { MapViewPageComponent } from './pages/map-view-page/map-view-page.component';\nimport { MasterEventsListPageComponent } from './pages/master-events-list-page/master-events-list-page.component';\n\n\nconst routes: Routes = [\n  // Default redirect to MasterEventsListPage\n  {\n    path: '',\n    redirectTo: '/events',\n    pathMatch: 'full'\n  },\n  {\n    path: 'events',\n    component: MasterEventsListPageComponent\n  },\n  {\n    path: 'events/details/:id',\n    component: EventDetailComponent\n  },\n  {\n    path: 'events/map',\n    component: MapViewPageComponent\n  }\n\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventDetailComponent.html":{"url":"components/EventDetailComponent.html","title":"component - EventDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/event-detail/event-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-detail\n            \n\n            \n                styleUrls\n                ./event-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                    Public\n                                trainingEventApiService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventInformation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                trainingEvent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, trainingEventApiService: MockTrainingEventApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/event-detail/event-detail.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trainingEventApiService\n                                                  \n                                                        \n                                                                    MockTrainingEventApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        trainingEvent\n                    \n                    \n                            \n                            Type :    TrainingEvent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/event-detail/event-detail.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEventInformation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEventInformation(activatedRoute: ActivatedRoute, eventApi: MockTrainingEventApiService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/event-detail/event-detail.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        eventApi\n                                                        \n                                                                    MockTrainingEventApiService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TrainingEvent\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/event-detail/event-detail.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activatedRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedRoute:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/event-detail/event-detail.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trainingEventApiService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trainingEventApiService:     MockTrainingEventApiService\n\n                    \n                \n                    \n                        \n                            Type :     MockTrainingEventApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/event-detail/event-detail.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { TrainingEvent } from '../../models/training-event';\nimport { MockTrainingEventApiService } from './../../services/mock-training-event-api.service';\n\n@Component({\n  selector: 'app-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.scss']\n})\nexport class EventDetailComponent implements OnInit {\n  @Input() trainingEvent: TrainingEvent;\n  constructor(\n    public activatedRoute: ActivatedRoute,\n    public trainingEventApiService: MockTrainingEventApiService\n  ) {\n\n  }\n\n  ngOnInit() {\n    const trainingEvent = this.getEventInformation(this.activatedRoute, this.trainingEventApiService);\n    this.trainingEvent = trainingEvent;\n  }\n\n  /**\n   *\n   *\n   * @param {ActivatedRoute} activatedRoute\n   * @param {MockTrainingEventApiService} eventApi\n   * @returns {TrainingEvent}\n   * @memberof EventDetailComponent\n   */\n  getEventInformation(\n    activatedRoute: ActivatedRoute,\n    eventApi: MockTrainingEventApiService\n  ): TrainingEvent {\n    // Get parameter string id and convert to number.\n    const eventIDParam = activatedRoute.snapshot.paramMap.get('id');\n    const eventID: number = +eventIDParam;\n    // Get event information for the given id.\n    const trainingEvent = eventApi.getEventByID(+eventID);\n\n    return trainingEvent;\n  }\n}\n\n    \n\n    \n        \n  Full Training Event details\n  ID: {{trainingEvent.id}}\n  Title: {{trainingEvent.title}}\n\n  imageUrl: {{trainingEvent.imageUrl}}\n  dateTime: {{trainingEvent.dateTime}}\n  availableSeats: {{trainingEvent.availableSeats}}\n  locationCityName: {{trainingEvent.locationCityName}}\n  locationCoordinates: {{trainingEvent.locationCoordinates}}\n  description: {{trainingEvent.description}}\n\n    \n\n    \n                \n                    ./event-detail.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Full Training Event details  ID: {{trainingEvent.id}}  Title: {{trainingEvent.title}}  imageUrl: {{trainingEvent.imageUrl}}  dateTime: {{trainingEvent.dateTime}}  availableSeats: {{trainingEvent.availableSeats}}  locationCityName: {{trainingEvent.locationCityName}}  locationCoordinates: {{trainingEvent.locationCoordinates}}  description: {{trainingEvent.description}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventDetailComponent', 'selector': 'app-event-detail'},{'name': 'EventListItemComponent', 'selector': 'app-event-list-item'},{'name': 'MapViewPageComponent', 'selector': 'app-map-view-page'},{'name': 'MasterEventsListPageComponent', 'selector': 'app-master-events-list-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventListItemComponent.html":{"url":"components/EventListItemComponent.html","title":"component - EventListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/event-list-item/event-list-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-list-item\n            \n\n            \n                styleUrls\n                ./event-list-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-list-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToEventDetail\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                trainingEvent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/event-list-item/event-list-item.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        trainingEvent\n                    \n                    \n                            \n                            Type :    TrainingEvent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/event-list-item/event-list-item.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToEventDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateToEventDetail(router: Router, trainingEvent: TrainingEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/event-list-item/event-list-item.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                        \n                                                                    Router\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trainingEvent\n                                                        \n                                                                    TrainingEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/event-list-item/event-list-item.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/event-list-item/event-list-item.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TrainingEvent } from './../../models/training-event';\n\n@Component({\n  selector: 'app-event-list-item',\n  templateUrl: './event-list-item.component.html',\n  styleUrls: ['./event-list-item.component.scss']\n})\nexport class EventListItemComponent implements OnInit {\n  @Input() trainingEvent: TrainingEvent;\n  constructor( public router: Router) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  navigateToEventDetail(router: Router, trainingEvent: TrainingEvent) {\n    router.navigate(['events/details', trainingEvent.id]);\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n  \n  {{trainingEvent.dateTime}}\n  {{trainingEvent.title}}\n\n\n  \n\n  {{trainingEvent.availableSeats}}\n  {{trainingEvent.locationCityName}}\n\n\n\n    \n\n    \n                \n                    ./event-list-item.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{trainingEvent.dateTime}}  {{trainingEvent.title}}    {{trainingEvent.availableSeats}}  {{trainingEvent.locationCityName}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventDetailComponent', 'selector': 'app-event-detail'},{'name': 'EventListItemComponent', 'selector': 'app-event-list-item'},{'name': 'MapViewPageComponent', 'selector': 'app-map-view-page'},{'name': 'MasterEventsListPageComponent', 'selector': 'app-master-events-list-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeoUtilityService.html":{"url":"injectables/GeoUtilityService.html","title":"injectable - GeoUtilityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeoUtilityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geo-utility.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides utility functions for geospatial calculation\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                degreesToRadians\n                            \n                            \n                                getDistanceKilometresBetweenCoordinates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geo-utility.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            degreesToRadians\n                            \n                            \n                        \n                    \n                \n                \n                    \ndegreesToRadians(degrees: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geo-utility.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Helper utility function to convert degrees to radians\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        degrees\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDistanceKilometresBetweenCoordinates\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDistanceKilometresBetweenCoordinates(pt1: LocationCoordinatePt, pt2: LocationCoordinatePt)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geo-utility.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Haversine formula to calculate great-circle distance between two points\nShortest distance over earth surface.\nhttp://www.movable-type.co.uk/scripts/latlong.html\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pt1\n                                                        \n                                                                    LocationCoordinatePt\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pt2\n                                                        \n                                                                    LocationCoordinatePt\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { LocationCoordinatePt } from './../models/training-event';\n\n/**\n * Provides utility functions for geospatial calculation\n *\n * @export\n * @class GeoUtilityService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeoUtilityService {\n\n  constructor() {\n    this.degreesToRadians(180); // 3.141592653589793\n    this.getDistanceKilometresBetweenCoordinates(\n      {\n        latitude: -27.3,\n        longitude: 153.22\n      },\n      {\n        latitude: -27.32,\n        longitude: 153.24\n      }\n    ); // 2.974956444218144\n\n  }\n\n   /**\n   * Helper utility function to convert degrees to radians\n   * @param {number} degrees\n   * @returns\n   * @memberof GeolocationService\n   */\n  degreesToRadians(degrees: number) {\n    const radians = degrees * (Math.PI / 180);\n    console.log('​GeoUtilityService:: degreesToRadians() -> radians', radians);\n    return radians;\n  }\n\n  /**\n   * Haversine formula to calculate great-circle distance between two points\n   * Shortest distance over earth surface.\n   * http://www.movable-type.co.uk/scripts/latlong.html\n   * @param {LocationCoordinatePt} pt1\n   * @param {LocationCoordinatePt} pt2\n   * @returns\n   * @memberof GeolocationService\n   */\n  getDistanceKilometresBetweenCoordinates(\n    pt1: LocationCoordinatePt,\n    pt2: LocationCoordinatePt\n  ) {\n    // Radius of the earth in kilometres. Authalic radius.\n    // May have accuracy differences based on 6371 vs 6372.8\n    // But precision less important if using\n    const RRadiusOfEarthKm = 6371;\n    const diffLat = this.degreesToRadians(pt2.latitude - pt1.latitude);\n    const diffLon = this.degreesToRadians(pt2.longitude - pt1.longitude);\n    const aSquareHalfChordLengthTwoPts = Math.sin(diffLat / 2) *\n      Math.sin(diffLat / 2) +\n      Math.cos(this.degreesToRadians(pt1.latitude)) *\n      Math.cos(this.degreesToRadians(pt2.latitude)) *\n      Math.sin(diffLon / 2) * Math.sin(diffLon / 2)\n    ;\n    const cAngularDistanceTwoPtsRadians = 2 *\n      Math.atan2(\n        Math.sqrt(aSquareHalfChordLengthTwoPts),\n        Math.sqrt(1 - aSquareHalfChordLengthTwoPts)\n      );\n\n    // Distance in kilometres\n    const distance = RRadiusOfEarthKm * cAngularDistanceTwoPtsRadians;\n    console.log('​GeoUtilityService:: constructor() -> distance', distance);\n\n    return distance;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocationService.html":{"url":"injectables/GeolocationService.html","title":"injectable - GeolocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeolocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geolocation.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userLocation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geolocation.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserLocation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geolocation.service.ts:21\n                            \n                        \n\n\n                \n                    \n                            Get user location from standard HTML5 Geolocation API\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userLocation:     LocationCoordinatePt\n\n                    \n                \n                    \n                        \n                            Type :     LocationCoordinatePt\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    latitude: -27.1,\n    longitude: 153\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocation.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { LocationCoordinates, LocationCoordinatePt } from './../models/training-event';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n  userLocation: LocationCoordinatePt = {\n    latitude: -27.1,\n    longitude: 153\n  };\n\n  constructor() { }\n\n  /**\n   * Get user location from standard HTML5 Geolocation API\n   *\n   * @memberof GeolocationService\n   */\n  getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position: Position) => {\n        console.log('​GeolocationService:: getUserLocation() -> position', position);\n\n        // Updates service userLocation\n        this.userLocation = position.coords;\n      });\n    }\n    return this.userLocation;\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocationCoordinatePt.html":{"url":"interfaces/LocationCoordinatePt.html","title":"interface - LocationCoordinatePt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocationCoordinatePt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/training-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type LocationCoordinates = [number, number];\nexport interface LocationCoordinatePt {\n    readonly latitude: number;\n    readonly longitude: number;\n}\n\nexport interface TrainingEvent {\n    readonly id: number;\n\n    readonly title: string;\n\n    /**\n     * DateTime in _*ISO 8601*_ format\n     * e.g. Date toISOString  /// locale\n     * @type {Date}\n     * @memberof TrainingEvent\n     */\n    readonly dateTime: string;\n\n    /**\n     * Url to an image representing the training event.\n     *\n     * @example \"via.placeholder.com/100x100\"\n     * @type {string}\n     * @memberof TrainingEvent\n     */\n    readonly imageUrl: string;\n\n    /**\n     * Places available for the training event\n     * ?? Disambiguation the available seats remaining vs capacity\n     * @type {number}\n     * @memberof TrainingEvent\n     */\n    readonly availableSeats: number;\n\n    /**\n     * The city where the training event is being held.\n     *\n     * @example 'Brisbane'\n     * @type {string}\n     * @memberof TrainingEvent\n     */\n    readonly locationCityName: string;\n\n    /**\n     * Latitude, Longitude coordinates.\n     *\n     * @example [-27.1, 153.3]\n     * @type {LocationCoordinates}\n     * @memberof TrainingEvent\n     */\n    readonly locationCoordinates: LocationCoordinates;\n\n    /**\n     * Description of the training event\n     *\n     * @type {string}\n     * @memberof TrainingEvent\n     */\n    readonly description: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapViewPageComponent.html":{"url":"components/MapViewPageComponent.html","title":"component - MapViewPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapViewPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/map-view-page/map-view-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-view-page\n            \n\n            \n                styleUrls\n                ./map-view-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-view-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                geolocationService\n                            \n                            \n                                gmapElement\n                            \n                            \n                                map\n                            \n                            \n                                    Public\n                                trainingEventApiService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserLocation\n                            \n                            \n                                initMap\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setupTrainingEventMarker\n                            \n                            \n                                setupTrainingEventsMarkers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geolocationService: GeolocationService, trainingEventApiService: MockTrainingEventApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/map-view-page/map-view-page.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geolocationService\n                                                  \n                                                        \n                                                                    GeolocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trainingEventApiService\n                                                  \n                                                        \n                                                                    MockTrainingEventApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserLocation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/map-view-page/map-view-page.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Get user location in response to user input.\nOn page load results in a [Violation]\n\n\n                            \n                            \n                            \n                                Returns :     LocationCoordinatePt\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMap\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/map-view-page/map-view-page.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Setup map with options\n\n\n                            \n                                Returns :     google.maps.Map\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/map-view-page/map-view-page.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/map-view-page/map-view-page.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setupTrainingEventMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetupTrainingEventMarker(googleMap: google.maps.Map, trainingEvent: TrainingEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/map-view-page/map-view-page.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Sets up markers to plot training event information on map.\nAdded associated infowindow to open on marker click.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        googleMap\n                                                        \n                                                                    google.maps.Map\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the map to apply the marker onto.\n\n                                                        \n                                                \n                                                \n                                                        trainingEvent\n                                                        \n                                                                    TrainingEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the training event for marker details.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     google.maps.Marker\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setupTrainingEventsMarkers\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetupTrainingEventsMarkers(googleMap: google.maps.Map, trainingEvents: TrainingEvent[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/map-view-page/map-view-page.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Setup Google Maps Markers for all the training events in the array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        googleMap\n                                                        \n                                                                    google.maps.Map\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        trainingEvents\n                                                        \n                                                                    TrainingEvent[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geolocationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geolocationService:     GeolocationService\n\n                    \n                \n                    \n                        \n                            Type :     GeolocationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/map-view-page/map-view-page.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gmapElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gmapElement:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('gmap')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/map-view-page/map-view-page.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     google.maps.Map\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/map-view-page/map-view-page.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trainingEventApiService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trainingEventApiService:     MockTrainingEventApiService\n\n                    \n                \n                    \n                        \n                            Type :     MockTrainingEventApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/map-view-page/map-view-page.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\n\nimport { LocationCoordinatePt, TrainingEvent } from './../../models/training-event';\nimport { GeolocationService } from './../../services/geolocation.service';\nimport { MockTrainingEventApiService } from './../../services/mock-training-event-api.service';\n\nimport { } from 'googlemaps';\ndeclare let google: any;\n@Component({\n  selector: 'app-map-view-page',\n  templateUrl: './map-view-page.component.html',\n  styleUrls: ['./map-view-page.component.scss']\n})\nexport class MapViewPageComponent implements OnInit, AfterViewInit {\n  // # hashtag template reference variable\n  @ViewChild('gmap') gmapElement: any;\n  map: google.maps.Map;\n\n  constructor(\n    public geolocationService: GeolocationService,\n    public trainingEventApiService: MockTrainingEventApiService\n  ) {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterViewInit() {\n    // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    // Add 'implements AfterViewInit' to the class.\n    this.map = this.initMap();\n\n    const trainingEvent = this.trainingEventApiService.getEventByID(1);\n\n    const trainingEventsAnyLocation = this.trainingEventApiService\n      .getMostRecentUpcomingEvents()\n    ;\n    this.setupTrainingEventsMarkers(this.map, trainingEventsAnyLocation);\n  }\n\n  /**\n   * Setup map with options\n   *\n   * @memberof MapViewPageComponent\n   */\n  initMap(): google.maps.Map {\n    const mapProp: google.maps.MapOptions = {\n      center: new google.maps.LatLng(-27.46794, 153.02809),\n      zoom: 15\n    };\n    const googleMap = new google.maps.Map(this.gmapElement.nativeElement, mapProp);\n\n    return googleMap;\n  }\n\n  /**\n   * Setup Google Maps Markers for all the training events in the array\n   *\n   * @param {google.maps.Map} googleMap\n   * @param {TrainingEvent[]} trainingEvents\n   * @memberof MapViewPageComponent\n   */\n  setupTrainingEventsMarkers(\n    googleMap: google.maps.Map,\n    trainingEvents: TrainingEvent[]) {\n\n    // Plot marker for each event\n    trainingEvents.forEach((trainingEvent: TrainingEvent) => {\n      this.setupTrainingEventMarker(googleMap, trainingEvent);\n    });\n\n  }\n  /**\n   * Sets up markers to plot training event information on map.\n   * Added associated infowindow to open on marker click.\n   * @param {google.maps.Map} googleMap the map to apply the marker onto.\n   * @param {TrainingEvent} trainingEvent the training event for marker details.\n   * @memberof MapViewPageComponent\n   */\n  setupTrainingEventMarker(\n    googleMap: google.maps.Map,\n    trainingEvent: TrainingEvent\n  ): google.maps.Marker {\n    // Setup marker\n    const markerCoordinates: any = {\n      lat: trainingEvent.locationCoordinates[0],\n      lng: trainingEvent.locationCoordinates[1]\n    }; // ?  bug () => explicitly typing google.maps.LatLng object.\n\n    const markerOptions: google.maps.MarkerOptions = {\n      position: markerCoordinates,\n      map: googleMap,             // can add to map here or call setMap() later.\n      title: trainingEvent.title\n    };\n\n    // Setup content for info window\n    const contentHtml = '' +\n      '' +\n      trainingEvent.title +\n      ' id: ' + trainingEvent.id +\n      ' city: ' + trainingEvent.locationCityName +\n      ' coord: ' + trainingEvent.locationCoordinates +\n      ' dateTime: ' + trainingEvent.dateTime +\n      '' +\n      trainingEvent.description +\n      ''\n    ;\n    // Setup info window for extended description on marker click.\n    const eventInfoWindowOptions: google.maps.InfoWindowOptions = {\n      content: contentHtml,\n      maxWidth: 200\n    };\n    const eventInfoWindow: google.maps.InfoWindow = new google.maps.InfoWindow(\n      eventInfoWindowOptions\n    );\n    console.log('​MapViewPageComponent:: eventInfoWindow', eventInfoWindow);\n    // Create marker\n    const marker: google.maps.Marker = new google.maps.Marker(markerOptions);\n    console.log('​MapViewPageComponent:: marker', marker);\n\n    // Add info window to marker for click event.\n    marker.addListener(\n      'click',\n      (markerClickData: any) => {\n        console.log('​MapViewPageComponent:: markerClickData', markerClickData);\n        eventInfoWindow.open(googleMap, marker);\n      }\n    );\n\n    return marker;\n  }\n\n  /**\n   * Get user location in response to user input.\n   * On page load results in a [Violation]\n   * @returns {LocationCoordinatePt}\n   * @memberof MapViewPageComponent\n   */\n  getUserLocation(): LocationCoordinatePt {\n    const userLocation = this.geolocationService.getUserLocation();\n    console.log('​MapViewPageComponent:: getUserLocation() -> userLocation', userLocation);\n    return userLocation;\n  }\n\n  // plotUserLocation\n}\n\n    \n\n    \n        \n  map-view-page works!\n\nCheck for events near me\n\n  \n\n\n    \n\n    \n                \n                    ./map-view-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  map-view-page works!Check for events near me  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventDetailComponent', 'selector': 'app-event-detail'},{'name': 'EventListItemComponent', 'selector': 'app-event-list-item'},{'name': 'MapViewPageComponent', 'selector': 'app-map-view-page'},{'name': 'MasterEventsListPageComponent', 'selector': 'app-master-events-list-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapViewPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MasterEventsListPageComponent.html":{"url":"components/MasterEventsListPageComponent.html","title":"component - MasterEventsListPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MasterEventsListPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/master-events-list-page/master-events-list-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-master-events-list-page\n            \n\n            \n                styleUrls\n                ./master-events-list-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./master-events-list-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cityLocation\n                            \n                            \n                                    Public\n                                geolocationService\n                            \n                            \n                                    Public\n                                trainingEventApiService\n                            \n                            \n                                upcomingTrainingEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkForEvents\n                            \n                            \n                                getUserLocation\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                populateTrainingEventsInCity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trainingEventApiService: MockTrainingEventApiService, geolocationService: GeolocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/master-events-list-page/master-events-list-page.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trainingEventApiService\n                                                  \n                                                        \n                                                                    MockTrainingEventApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocationService\n                                                  \n                                                        \n                                                                    GeolocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkForEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckForEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/master-events-list-page/master-events-list-page.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            User explicit check for events near user location.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserLocation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/master-events-list-page/master-events-list-page.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Get user location in response to user input.\nOn page load results in a [Violation]\n\n\n                            \n                                Returns :     LocationCoordinatePt\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/master-events-list-page/master-events-list-page.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            populateTrainingEventsInCity\n                            \n                            \n                        \n                    \n                \n                \n                    \npopulateTrainingEventsInCity(cityLocation: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/master-events-list-page/master-events-list-page.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Gets training events for a city location name.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cityLocation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TrainingEvent[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cityLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cityLocation:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Brisbane'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/master-events-list-page/master-events-list-page.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geolocationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geolocationService:     GeolocationService\n\n                    \n                \n                    \n                        \n                            Type :     GeolocationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/master-events-list-page/master-events-list-page.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trainingEventApiService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trainingEventApiService:     MockTrainingEventApiService\n\n                    \n                \n                    \n                        \n                            Type :     MockTrainingEventApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/master-events-list-page/master-events-list-page.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upcomingTrainingEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        upcomingTrainingEvents:     TrainingEvent[]\n\n                    \n                \n                    \n                        \n                            Type :     TrainingEvent[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/master-events-list-page/master-events-list-page.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { TrainingEvent } from '../../models/training-event';\nimport { LocationCoordinatePt } from './../../models/training-event';\nimport { GeolocationService } from './../../services/geolocation.service';\nimport { MockTrainingEventApiService } from './../../services/mock-training-event-api.service';\n\n@Component({\n  selector: 'app-master-events-list-page',\n  templateUrl: './master-events-list-page.component.html',\n  styleUrls: ['./master-events-list-page.component.scss']\n})\nexport class MasterEventsListPageComponent implements OnInit {\n\n  // Simpler to concrete the properties here. Could also pass full reactivity.\n  upcomingTrainingEvents: TrainingEvent[] = [];\n  cityLocation = 'Brisbane'; // default\n  // Can encapsulate logic in service as needed.\n\n\n  constructor(\n    public trainingEventApiService: MockTrainingEventApiService,\n    public geolocationService: GeolocationService\n  ) {\n\n  }\n\n  ngOnInit() {\n\n    // Get events to populate list.\n    const upcomingEventsRecentAtCity = this.populateTrainingEventsInCity(this.cityLocation);\n\n    this.upcomingTrainingEvents = upcomingEventsRecentAtCity;\n\n  }\n\n\n  /**\n   * Gets training events for a city location name.\n   *\n   * @param {string} cityLocation\n   * @returns\n   * @memberof MasterEventsListPageComponent\n   */\n  populateTrainingEventsInCity(cityLocation: string): TrainingEvent[] {\n    const upcomingSortedEventsAtCity = this.trainingEventApiService\n      .getMostRecentUpcomingEventsNumSliceInCityLocation(cityLocation)\n    ;\n    console.log('​MasterEventsListPageComponent:: ngOnInit() -> upcomingSortedEventsAtBrisbane', upcomingSortedEventsAtCity);\n    return upcomingSortedEventsAtCity;\n  }\n\n  // populateTrainingEventsNearUserLocation(userLocation: LocationCoordinatePt): TrainingEvent[] {\n\n\n  // }\n  /**\n   * Get user location in response to user input.\n   * On page load results in a [Violation]\n   *\n   * @memberof MasterEventsListPageComponent\n   */\n  getUserLocation(): LocationCoordinatePt {\n    const userLocation = this.geolocationService.getUserLocation();\n    console.log('​MasterEventsListPageComponent:: ngOnInit() -> userLocation', userLocation);\n    return userLocation;\n  }\n\n  /**\n   * User explicit check for events near user location.\n   *\n   * @memberof MasterEventsListPageComponent\n   */\n  checkForEvents() {\n    this.getUserLocation();\n    this.populateTrainingEventsInCity('Brisbane');\n  }\n}\n\n    \n\n    \n        \n  master-events-list-page works!\n\nUpcoming local events\nCheck for events near me\n\n  \n    \n    \n  \n\n    \n\n    \n                \n                    ./master-events-list-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  master-events-list-page works!Upcoming local eventsCheck for events near me            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventDetailComponent', 'selector': 'app-event-detail'},{'name': 'EventListItemComponent', 'selector': 'app-event-list-item'},{'name': 'MapViewPageComponent', 'selector': 'app-map-view-page'},{'name': 'MasterEventsListPageComponent', 'selector': 'app-master-events-list-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MasterEventsListPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTrainingEventApiService.html":{"url":"injectables/MockTrainingEventApiService.html","title":"injectable - MockTrainingEventApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockTrainingEventApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mock-training-event-api.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                geoUtilityService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compareDateSoonest\n                            \n                            \n                                compareUpcomingEventLatest\n                            \n                            \n                                compareUpcomingEventSoonest\n                            \n                            \n                                eventFilterHasCity\n                            \n                            \n                                getEventByID\n                            \n                            \n                                getEvents\n                            \n                            \n                                getMostRecentUpcomingEvents\n                            \n                            \n                                getMostRecentUpcomingEventsClosestToCoordinates\n                            \n                            \n                                getMostRecentUpcomingEventsNumSliceInCityLocation\n                            \n                            \n                                sortEventsDateTimeSoonest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(geoUtilityService: GeoUtilityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mock-training-event-api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geoUtilityService\n                                                  \n                                                        \n                                                                    GeoUtilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareDateSoonest\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompareDateSoonest(givenDate: string, comparisonDate: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:207\n                            \n                        \n\n\n                \n                    \n                            Comparison function to get the future event that is happening soonest.\nThe future dates that have least values are closest to the current date.\nAssumed.\nCould make this more generic.\nFor Array.sort();\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        givenDate\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        comparisonDate\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareUpcomingEventLatest\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompareUpcomingEventLatest()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:227\n                            \n                        \n\n\n                \n                    \n                            Comparison that gets the future event that is most distant from now.\nThe future dates with larger values are further away from current date.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareUpcomingEventSoonest\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompareUpcomingEventSoonest(givenEvent: TrainingEvent, comparisonEvent: TrainingEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            Comparison function to get the future event that is happening soonest.\nThe future dates that have least values are closest to the current date.\nAssumed.\nFor Array.sort();\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        givenEvent\n                                                        \n                                                                    TrainingEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        comparisonEvent\n                                                        \n                                                                    TrainingEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventFilterHasCity\n                            \n                            \n                        \n                    \n                \n                \n                    \neventFilterHasCity(trainingEvent: TrainingEvent, givenLocationCityName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:135\n                            \n                        \n\n\n                \n                    \n                            Utility function for filtering events array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trainingEvent\n                                                        \n                                                                    TrainingEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        givenLocationCityName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEventByID\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEventByID(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            Get a specific event searched by ID.\n-- TODO: Temp function. Can separate training event service from API. Caching\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TrainingEvent\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEvents(numEvents: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Default five events\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        numEvents\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                5\n                                                        \n\n                                                        \n                                                                API would ideally sort before retrieving the results.\nOtherwise have to SELECT the whole table just for application usage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TrainingEvent[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMostRecentUpcomingEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMostRecentUpcomingEvents(numEventsWanted: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:60\n                            \n                        \n\n\n                \n                    \n                            Default next five 'upcoming' events in order from soonest to latest.\nCould make more generic.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        numEventsWanted\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                5\n                                                        \n\n                                                        \n                                                                Default value five upcoming events to retrieve/select.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TrainingEvent[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMostRecentUpcomingEventsClosestToCoordinates\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMostRecentUpcomingEventsClosestToCoordinates(coordinates: LocationCoordinatePt, numEventsWanted: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Get most recent upcoming events closest to coordinates\ne.g. Pass user location to get most relevant results.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        coordinates\n                                                        \n                                                                    LocationCoordinatePt\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        numEventsWanted\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                5\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TrainingEvent[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMostRecentUpcomingEventsNumSliceInCityLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMostRecentUpcomingEventsNumSliceInCityLocation(locationCityName: string, numEventsWanted: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Get events at the user's current location city to fulfil requirement:\nDisplay events based on user's location.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        locationCityName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        numEventsWanted\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                5\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TrainingEvent[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortEventsDateTimeSoonest\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortEventsDateTimeSoonest(events: TrainingEvent[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        events\n                                                        \n                                                                    TrainingEvent[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            &quot;2019-08-04T00:30:39.038Z&quot; &quot;2019-02-02T03:47:07.045Z&quot;\n                                        \n                            \n                            \n                                Returns :     TrainingEvent[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoUtilityService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geoUtilityService:     GeoUtilityService\n\n                    \n                \n                    \n                        \n                            Type :     GeoUtilityService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/mock-training-event-api.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { TrainingEvent, LocationCoordinatePt } from './../models/training-event';\nimport { DATA_SEED_TRAINING_EVENTS } from './../seed/seed-training-events';\nimport { GeoUtilityService } from './geo-utility.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockTrainingEventApiService {\n\n  constructor(public geoUtilityService: GeoUtilityService) {\n\n  }\n\n  // - TODO: Add asynchronous reactivity e.g. Promise Observable to mock delay in network requests.\n\n\n  /**\n   * Get a specific event searched by ID.\n   * -- TODO: Temp function. Can separate training event service from API. Caching\n   * @param {number} id\n   * @returns {TrainingEvent}\n   * @memberof MockTrainingEventApiService\n   */\n  getEventByID(id: number): TrainingEvent {\n    const seedTestData = DATA_SEED_TRAINING_EVENTS;\n    const foundTrainingEvent = seedTestData.find( trainingEvent => {\n      const trainingIDFound: boolean = trainingEvent.id === id;\n      return trainingIDFound;\n    });\n\n    return foundTrainingEvent;\n  }\n\n  /**\n   * Default five events\n   *\n   * @param {number} [numEvents=5] // Unused as need to process whole mock data in app.\\\n   * API would ideally sort before retrieving the results.\n   * Otherwise have to SELECT the whole table just for application usage\n   *\n   * @returns {TrainingEvent[]}\n   * @memberof MockTrainingEventApiService\n   */\n  getEvents(numEvents: number = 5): TrainingEvent[] {\n    const seedTestData = DATA_SEED_TRAINING_EVENTS;\n\n    return seedTestData;\n  }\n\n  /**\n   * Default next five 'upcoming' events in order from soonest to latest.\n   * Could make more generic.\n   *\n   * @param {number} [numEventsWanted=5] Default value five upcoming events to retrieve/select.\n   * @returns {TrainingEvent[]}\n   * @memberof MockTrainingEventApiService\n   */\n  getMostRecentUpcomingEvents(numEventsWanted: number = 5): TrainingEvent[] {\n    const events = this.getEvents(numEventsWanted);\n\n    const mostRecentEvents = this.sortEventsDateTimeSoonest(events);\n    console.log('​MockTrainingEventApiService:: constructor() -> mostRecentEvents full list', mostRecentEvents);\n\n    // Get the specified number of events after sorting. E.g. Next five events.\n    // First five events slice 0..5 or undefined,5 for optional parameter.\n    const mostRecentEventsNextNumSlice = mostRecentEvents.slice(undefined, numEventsWanted);\n    console.log('​MockTrainingEventApiService:: constructor() -> mostRecentEventsNextSlice', mostRecentEventsNextNumSlice);\n\n    return mostRecentEventsNextNumSlice;\n  }\n\n  /**\n   * Get events at the user's current location city to fulfil requirement:\n   * *Display events based on user's location.*\n   *\n   * @param {string} locationCityName\n   * @param {number} [numEventsWanted=5]\n   * @returns {TrainingEvent[]}\n   * @memberof MockTrainingEventApiService\n   */\n  getMostRecentUpcomingEventsNumSliceInCityLocation(\n    locationCityName: string,\n    numEventsWanted: number = 5\n  ): TrainingEvent[] {\n    const events = this.getEvents();\n\n    // Get events for a specific city.\n    const cityEvents = events.filter((trainingEvent: TrainingEvent) => {\n      const eventIsAtCity = this.eventFilterHasCity(trainingEvent, locationCityName);\n      return eventIsAtCity;\n    });\n\n    const mostRecentUpcomingCityEvents = this.sortEventsDateTimeSoonest(cityEvents);\n\n    const mostRecentUpcomingCityEventsNumSlice = mostRecentUpcomingCityEvents\n      .slice(undefined, numEventsWanted)\n    ;\n\n\n    return mostRecentUpcomingCityEventsNumSlice;\n  }\n\n  /**\n   * Get most recent upcoming events closest to coordinates\n   * e.g. Pass user location to get most relevant results.\n   *\n   * @param {LocationCoordinatePt} coordinates\n   * @param {number} [numEventsWanted=5]\n   * @returns {TrainingEvent[]}\n   * @memberof MockTrainingEventApiService\n   */\n  getMostRecentUpcomingEventsClosestToCoordinates(\n    coordinates: LocationCoordinatePt,\n    numEventsWanted: number = 5)\n  : TrainingEvent[] {\n    // Maybe better to use map bounds?\n    // 1. Get the geographically closest training events\n\n    // 2. Sort by recent upcoming soonest order.\n\n    // Return num events e.g. 5 results\n\n    return ;\n  }\n  /**\n   * Utility function for filtering events array\n   *\n   * @param {TrainingEvent} trainingEvent\n   * @param {string} givenLocationCityName\n   * @returns\n   * @memberof MockTrainingEventApiService\n   */\n  eventFilterHasCity(\n    trainingEvent: TrainingEvent,\n    givenLocationCityName: string\n  ) {\n    const trainingEventCityName = trainingEvent.locationCityName;\n    const sameCityNameFound = trainingEventCityName === givenLocationCityName;\n\n    return sameCityNameFound;\n  }\n\n  /**\n   *\n   * @example \"2019-08-04T00:30:39.038Z\" \"2019-02-02T03:47:07.045Z\"\n   * @param {TrainingEvent[]} events\n   * @memberof MockTrainingEventApiService\n   */\n  sortEventsDateTimeSoonest(events: TrainingEvent[]): TrainingEvent[] {\n    // use Array.sort() with custom function\n    // ISO 8601 can be sorted lexicographically. Or use Date\n    const trainingEvents = events;\n\n    const trainingEventsSortedSoonest = trainingEvents.sort(\n      (firstGivenEvent, secondComparisonEvent) => {\n        // If a \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrainingEvent.html":{"url":"interfaces/TrainingEvent.html","title":"interface - TrainingEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrainingEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/training-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        availableSeats\n                                \n                                \n                                        dateTime\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        imageUrl\n                                \n                                \n                                        locationCityName\n                                \n                                \n                                        locationCoordinates\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableSeats\n                                    \n                                \n                                \n                                    \n                                        availableSeats:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Places available for the training event\n?? Disambiguation the available seats remaining vs capacity\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateTime\n                                    \n                                \n                                \n                                    \n                                        dateTime:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DateTime in ISO 8601 format\ne.g. Date toISOString  /// locale\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the training event\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url to an image representing the training event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationCityName\n                                    \n                                \n                                \n                                    \n                                        locationCityName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The city where the training event is being held.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationCoordinates\n                                    \n                                \n                                \n                                    \n                                        locationCoordinates:     LocationCoordinates\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LocationCoordinates\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Latitude, Longitude coordinates.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type LocationCoordinates = [number, number];\nexport interface LocationCoordinatePt {\n    readonly latitude: number;\n    readonly longitude: number;\n}\n\nexport interface TrainingEvent {\n    readonly id: number;\n\n    readonly title: string;\n\n    /**\n     * DateTime in _*ISO 8601*_ format\n     * e.g. Date toISOString  /// locale\n     * @type {Date}\n     * @memberof TrainingEvent\n     */\n    readonly dateTime: string;\n\n    /**\n     * Url to an image representing the training event.\n     *\n     * @example \"via.placeholder.com/100x100\"\n     * @type {string}\n     * @memberof TrainingEvent\n     */\n    readonly imageUrl: string;\n\n    /**\n     * Places available for the training event\n     * ?? Disambiguation the available seats remaining vs capacity\n     * @type {number}\n     * @memberof TrainingEvent\n     */\n    readonly availableSeats: number;\n\n    /**\n     * The city where the training event is being held.\n     *\n     * @example 'Brisbane'\n     * @type {string}\n     * @memberof TrainingEvent\n     */\n    readonly locationCityName: string;\n\n    /**\n     * Latitude, Longitude coordinates.\n     *\n     * @example [-27.1, 153.3]\n     * @type {LocationCoordinates}\n     * @memberof TrainingEvent\n     */\n    readonly locationCoordinates: LocationCoordinates;\n\n    /**\n     * Description of the training event\n     *\n     * @type {string}\n     * @memberof TrainingEvent\n     */\n    readonly description: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/event-detail/event-detail.component.ts\n            \n            \n                component\n            \n            \n                EventDetailComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/event-list-item/event-list-item.component.ts\n            \n            \n                component\n            \n            \n                EventListItemComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/training-event.ts\n            \n            \n                interface\n            \n            \n                LocationCoordinatePt\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/training-event.ts\n            \n            \n                interface\n            \n            \n                TrainingEvent\n            \n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/pages/map-view-page/map-view-page.component.ts\n            \n            \n                component\n            \n            \n                MapViewPageComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/pages/map-view-page/map-view-page.component.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/master-events-list-page/master-events-list-page.component.ts\n            \n            \n                component\n            \n            \n                MasterEventsListPageComponent\n            \n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/seed/seed-training-events.ts\n            \n            \n                function\n            \n            \n                generateFutureDateIso8601\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/seed/seed-training-events.ts\n            \n            \n                function\n            \n            \n                getRandomFutureEpoch\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/seed/seed-training-events.ts\n            \n            \n                function\n            \n            \n                getRandomInt\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/seed/seed-training-events.ts\n            \n            \n                variable\n            \n            \n                DATA_DESCRIPTION_PLACEHOLDER_TEXT\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/seed/seed-training-events.ts\n            \n            \n                variable\n            \n            \n                DATA_SEED_TRAINING_EVENTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/seed/seed-training-events.ts\n            \n            \n                variable\n            \n            \n                daysPerYear\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/seed/seed-training-events.ts\n            \n            \n                variable\n            \n            \n                hoursPerDay\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/seed/seed-training-events.ts\n            \n            \n                variable\n            \n            \n                millisecondsPerSecond\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/seed/seed-training-events.ts\n            \n            \n                variable\n            \n            \n                minutesPerHour\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/seed/seed-training-events.ts\n            \n            \n                variable\n            \n            \n                secondsPerMinute\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/geo-utility.service.ts\n            \n            \n                injectable\n            \n            \n                GeoUtilityService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/services/geolocation.service.ts\n            \n            \n                injectable\n            \n            \n                GeolocationService\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/mock-training-event-api.service.ts\n            \n            \n                injectable\n            \n            \n                MockTrainingEventApiService\n            \n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            @types/googlemaps : ^3.30.16\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            generateFutureDateIso8601   (src/.../seed-training-events.ts)\n                        \n                        \n                            getRandomFutureEpoch   (src/.../seed-training-events.ts)\n                        \n                        \n                            getRandomInt   (src/.../seed-training-events.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/seed/seed-training-events.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateFutureDateIso8601\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateFutureDateIso8601()\n                    \n                \n\n\n\n\n                \n                    \n                            Generate ISO 8601 seed date time for future events from current datetime.\n-- Can decompose some parts. Epoch separate from ISOString test.\n-- TODO: move to random generation to Mock provider/service. Static utility?\n\n\n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRandomFutureEpoch\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRandomFutureEpoch(givenCurrentDateTimeEpoch)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        givenCurrentDateTimeEpoch\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRandomInt\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRandomInt(maxEpochSeconds)\n                    \n                \n\n\n\n\n                \n                    \n                            Get random integer from a given max range.\n0..max\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        maxEpochSeconds\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Max top range.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPlanning\nngh deployed @ https://slimlime.github.io/user-training-events-recommendations-map/\nng build --base-href ./\nngh --dir=\"dist/UserLocationTrainingEventMapRecommendations\"\nAlternate lean journal log instead of GitHub issue tracking/project management tab (e.g. hn algolia paginator repo)\n/Proposed task estimation ~doubled\n5:30 am\nAlternate lean journal log instead of GitHub issue tracking/project management tab (e.g. hn algolia paginator repo)\n30 minutes planning project structure\n15-30 minutes discovering and resolving emergent bug November for new Angular 6 projects https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30310 for Jasmine testing\n30 minutes mock TrainingEvents API\n10 minutes master events list component display\n30 minutes Geolocation\n10-20 minutes Check training events by city for user-relevant data.\n10 minutes event details working properly^\n30 minutes Google Maps with user location + markers. Event details popup.\n~Hours Testing + … + if unintended bugs found. Finalising\n++ fun time CI/CD, repeatable visual studio workspace config to source control, Docker, Travis CI, AWS CodePipeline,\n+++ Better TSLint rules - Microsoft SDL\n\nCreate configured Angular project\na. ng new UserLocationTrainingEventMapRecommendations --routing --style=scss\n\nAdded notes:\n\nUpdate package.json to avoid emergent new Angular 6 project bugs with \nJasmine/Typescript version compatibility\n\n\n\nnpm install @types/googlemaps\n\n\nCreate data model interface (or class) for app/models/TrainingEvent.ts\na. models/TrainingEvent interface\nCreate seed data\na. seed/SeedTrainingEvent\nng generate service services/MockTrainingEventApi --dryRun\na. (i.e. MockTrainingEventApiService)\nng generate service services/Geolocation\na. For geo utilities such as distance calculation\nb. Maybe user location here as well makes more sense with Google Maps integration\n(maybe in addition to Geolocation) ng generate service services/UserLocation Abstract user location?\n i. e.g. maybe some integration with Google Maps. Web HTML5 Geolocation API?\n\nCreate components (e.g. file structure app/components, app/services)\n a. MasterEventsListPage   (// would be a Page if using Ionic)\n   i. Ng generate component pages/MasterEventsListPage\n 1) EventListItem\n   a) `ng generate component components/EventListItem`\n 2) EventDetail\n   a) `ng generate component components/EventDetail` b. MapViewPage\n   i. Ng generate component pages/MapViewPage\n 1) Have all the events as markers?\n   a) EventDetail c. Navigation component\n\nGoogle Maps implementation\n• Add to router for page routing (if needed)\n• Add any additional tests (if not TDD already)\n ○ Unit tests (Karma Jasmine)\n ○ E2E tests (Protractor)\n>80% Test coverage\n\n\nGO1-Front-End-Test\nFiles for GO1 Front End tech test.\nFront-end Scenario\nBuild a slim application to retrieve, filter and display training events based on a user's location and the current date.\nRequirements\n\nYou can use any javascript framework.\nRetrieve events data using the supplied mock api (or build your own for bonus points).\nIf you wish to build your own, the data for events should contain:\n\nTitle\nDateTime in ISO 8601 format\nImage url\nAvailable Seats\nLocation (City)\nDescription\n\n\nYour application should:\n\nShow the next five events in a list, ordered from soonest to latest.\nThe event should show the course image, title, date and location.\nClicking on the event should open a new interface with the full event's information.\nTranspile ES6 (you'll need this to use the supplied mock api)\n\n\nYou should include some test coverage for this application.\n\nCommit your work to a repository regularly (and make it public or send us the .git directory)\nRecord how long you work on this application (be honest, accurate task estimation is important in this industry)\n\nSuggestions\nAn application like this can be deployed quickly using Create-react-app, which will supply the packaging, test framework and transpiling needed.\nHowever do not feel constrained by this! If you are more confident in another framework (eg. React, or Angular, Vue), build this application in whatever you like to work with.\nYou will need to calculate distance between positions to achieve the required functionality.  A library such as TurfJS will allow you to do make these calculations easily.\nExtra Credits\n\nInclude a map library to display location/events.\nPackage your application in a Docker container.\nAchieve >80% test coverage.\nImpress us by adding something amazing that's not documented above.\n\nUserLocationTrainingEventMapRecommendations\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEventDetailComponent\n\nEventDetailComponent\n\nAppModule -->\n\nEventDetailComponent->AppModule\n\n\n\n\n\nEventListItemComponent\n\nEventListItemComponent\n\nAppModule -->\n\nEventListItemComponent->AppModule\n\n\n\n\n\nMapViewPageComponent\n\nMapViewPageComponent\n\nAppModule -->\n\nMapViewPageComponent->AppModule\n\n\n\n\n\nMasterEventsListPageComponent\n\nMasterEventsListPageComponent\n\nAppModule -->\n\nMasterEventsListPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LocationCoordinates   (src/.../training-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/training-event.ts\n    \n        \n            \n                \n                    \n                        \n                        LocationCoordinates\n                    \n                \n                \n                    \n                        LocationCoordinates:     [number, number]\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DATA_DESCRIPTION_PLACEHOLDER_TEXT   (src/.../seed-training-events.ts)\n                        \n                        \n                            DATA_SEED_TRAINING_EVENTS   (src/.../seed-training-events.ts)\n                        \n                        \n                            daysPerYear   (src/.../seed-training-events.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            google   (src/.../map-view-page.component.ts)\n                        \n                        \n                            hoursPerDay   (src/.../seed-training-events.ts)\n                        \n                        \n                            millisecondsPerSecond   (src/.../seed-training-events.ts)\n                        \n                        \n                            minutesPerHour   (src/.../seed-training-events.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            secondsPerMinute   (src/.../seed-training-events.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/seed/seed-training-events.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATA_DESCRIPTION_PLACEHOLDER_TEXT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DATA_DESCRIPTION_PLACEHOLDER_TEXT:     \n\n                    \n                \n                    \n                        \n                            Default value : 'Lorem ipsum dolor sit amet,' +\n    'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore' +\n    'et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud' +\n    'exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DATA_SEED_TRAINING_EVENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DATA_SEED_TRAINING_EVENTS:     TrainingEvent[]\n\n                    \n                \n                    \n                        \n                            Type :     TrainingEvent[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n{\n    id                 : 1,\n    title              : 'Event Title A',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Brisbane',\n    locationCoordinates: [-27.4697707, 153.025123],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 2,\n    title              : 'Event Title B',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Brisbane',\n    locationCoordinates: [-27.467907, 153.025133],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 3,\n    title              : 'Event Title C',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Brisbane',\n    locationCoordinates: [-27.4897707, 153.025123],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 4,\n    title              : 'Event Title D',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Brisbane',\n    locationCoordinates: [-27.4697707, 153.025123],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 5,\n    title              : 'Event Title E',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Brisbane',\n    locationCoordinates: [-27.4597707, 153.025123],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 6,\n    title              : 'Event Title F',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Brisbane',\n    locationCoordinates: [-27.4497707, 153.025123],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 7,\n    title              : 'Event Title G',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Brisbane',\n    locationCoordinates: [-27.4697707, 153.015123],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 8,\n    title              : 'Event Title H',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Brisbane',\n    locationCoordinates: [-27.4697707, 153.035123],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 9,\n    title              : 'Event Title I',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Brisbane',\n    locationCoordinates: [-27.4797707, 153.035123],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 10,\n    title              : 'Event Title J',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Brisbane',\n    locationCoordinates: [-27.4497707, 153.045123],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 11,\n    title              : 'Event Title Sydney',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Sydney',\n    locationCoordinates: [-33.8688, 151.2093],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 12,\n    title              : 'Event Title Sydney 2',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Sydney',\n    locationCoordinates: [-33.8688, 151.2043],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 13,\n    title              : 'Event Title Melbourne',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Sydney',\n    locationCoordinates: [-33.8688, 151.2043],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n},\n{\n    id                 : 14,\n    title              : 'Event Title Melbourne 2',\n    dateTime           : generateFutureDateIso8601(),\n    imageUrl           : 'http://via.placeholder.com/100x100',\n    availableSeats     : 128,\n    locationCityName   : 'Sydney',\n    locationCoordinates: [-33.8688, 151.2043],\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\n}\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daysPerYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        daysPerYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 365\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoursPerDay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hoursPerDay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 24\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            millisecondsPerSecond\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        millisecondsPerSecond:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minutesPerHour\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minutesPerHour:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondsPerMinute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        secondsPerMinute:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/pages/map-view-page/map-view-page.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
