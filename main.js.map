{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/event-detail/event-detail.component.html","webpack:///./src/app/components/event-detail/event-detail.component.scss","webpack:///./src/app/components/event-detail/event-detail.component.ts","webpack:///./src/app/components/event-list-item/event-list-item.component.html","webpack:///./src/app/components/event-list-item/event-list-item.component.scss","webpack:///./src/app/components/event-list-item/event-list-item.component.ts","webpack:///./src/app/pages/map-view-page/map-view-page.component.html","webpack:///./src/app/pages/map-view-page/map-view-page.component.scss","webpack:///./src/app/pages/map-view-page/map-view-page.component.ts","webpack:///./src/app/pages/master-events-list-page/master-events-list-page.component.html","webpack:///./src/app/pages/master-events-list-page/master-events-list-page.component.scss","webpack:///./src/app/pages/master-events-list-page/master-events-list-page.component.ts","webpack:///./src/app/seed/seed-training-events.ts","webpack:///./src/app/services/geo-utility.service.ts","webpack:///./src/app/services/geolocation.service.ts","webpack:///./src/app/services/mock-training-event-api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { EventDetailComponent } from './components/event-detail/event-detail.component';\nimport { MapViewPageComponent } from './pages/map-view-page/map-view-page.component';\nimport { MasterEventsListPageComponent } from './pages/master-events-list-page/master-events-list-page.component';\n\n\nconst routes: Routes = [\n  // Default redirect to MasterEventsListPage\n  {\n    path: '',\n    redirectTo: '/events',\n    pathMatch: 'full'\n  },\n  {\n    path: 'events',\n    component: MasterEventsListPageComponent\n  },\n  {\n    path: 'events/details/:id',\n    component: EventDetailComponent\n  },\n  {\n    path: 'events/map',\n    component: MapViewPageComponent\n  }\n\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to UserLocationTrainingEventMapRecommendations!\\n  </h1>\\n</div>\\n\\n<ul>\\n  <li>\\n    <a routerLink=\\\"events/map\\\">\\n      Map\\n    </a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"events/\\\">\\n      Events list\\n    </a>\\n  <li>\\n    <a routerLink=\\\"events/details/1\\\">\\n      Event details by id\\n    </a>\\n  </li>\\n</ul>\\n\\n<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MasterEventsListPageComponent } from './pages/master-events-list-page/master-events-list-page.component';\r\nimport { MapViewPageComponent } from './pages/map-view-page/map-view-page.component';\r\nimport { EventDetailComponent } from './components/event-detail/event-detail.component';\r\nimport { EventListItemComponent } from './components/event-list-item/event-list-item.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MasterEventsListPageComponent,\r\n    MapViewPageComponent,\r\n    EventDetailComponent,\r\n    EventListItemComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<pre>\\n  Full Training Event details\\n  ID: {{trainingEvent.id}}\\n  Title: {{trainingEvent.title}}\\n\\n  imageUrl: {{trainingEvent.imageUrl}}\\n  dateTime: {{trainingEvent.dateTime}}\\n  availableSeats: {{trainingEvent.availableSeats}}\\n  locationCityName: {{trainingEvent.locationCityName}}\\n  locationCoordinates: {{trainingEvent.locationCoordinates}}\\n  description: {{trainingEvent.description}}\\n</pre>\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { TrainingEvent } from '../../models/training-event';\nimport { MockTrainingEventApiService } from './../../services/mock-training-event-api.service';\n\n@Component({\n  selector: 'app-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.scss']\n})\nexport class EventDetailComponent implements OnInit {\n  @Input() trainingEvent: TrainingEvent;\n  constructor(\n    public activatedRoute: ActivatedRoute,\n    public trainingEventApiService: MockTrainingEventApiService\n  ) {\n\n  }\n\n  ngOnInit() {\n    const trainingEvent = this.getEventInformation(this.activatedRoute, this.trainingEventApiService);\n    this.trainingEvent = trainingEvent;\n  }\n\n  /**\n   *\n   *\n   * @param {ActivatedRoute} activatedRoute\n   * @param {MockTrainingEventApiService} eventApi\n   * @returns {TrainingEvent}\n   * @memberof EventDetailComponent\n   */\n  getEventInformation(\n    activatedRoute: ActivatedRoute,\n    eventApi: MockTrainingEventApiService\n  ): TrainingEvent {\n    // Get parameter string id and convert to number.\n    const eventIDParam = activatedRoute.snapshot.paramMap.get('id');\n    const eventID: number = +eventIDParam;\n    // Get event information for the given id.\n    const trainingEvent = eventApi.getEventByID(+eventID);\n\n    return trainingEvent;\n  }\n}\n","module.exports = \"<p>\\n  <!-- Need actual image -->\\n  <!-- Search for id details? or just pass the data in shared service or i/o bind -->\\n  <a (click)=\\\"navigateToEventDetail(this.router, trainingEvent)\\\"  class=\\\"thumb\\\">\\n    <img src=\\\"{{trainingEvent.imageUrl}}\\\" alt=\\\"{{trainingEvent.title}}\\\" />\\n  </a>\\n  {{trainingEvent.dateTime}}\\n  {{trainingEvent.title}}\\n\\n\\n  <!-- {{trainingEvent.imageUrl}} -->\\n\\n  {{trainingEvent.availableSeats}}\\n  {{trainingEvent.locationCityName}}\\n\\n</p>\\n\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TrainingEvent } from './../../models/training-event';\n\n@Component({\n  selector: 'app-event-list-item',\n  templateUrl: './event-list-item.component.html',\n  styleUrls: ['./event-list-item.component.scss']\n})\nexport class EventListItemComponent implements OnInit {\n  @Input() trainingEvent: TrainingEvent;\n  constructor( public router: Router) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  navigateToEventDetail(router: Router, trainingEvent: TrainingEvent) {\n    router.navigate(['events/details', trainingEvent.id]);\n  }\n}\n","module.exports = \"<p>\\n  map-view-page works!\\n</p>\\n<button (click)=\\\"getUserLocation()\\\">Check for events near me</button>\\n<div #gmap style=\\\"width:100%;height:400px\\\">\\n  \\n</div>\\n\"","module.exports = \"\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\n\nimport { LocationCoordinatePt, TrainingEvent } from './../../models/training-event';\nimport { GeolocationService } from './../../services/geolocation.service';\nimport { MockTrainingEventApiService } from './../../services/mock-training-event-api.service';\n\nimport { } from 'googlemaps';\ndeclare let google: any;\n@Component({\n  selector: 'app-map-view-page',\n  templateUrl: './map-view-page.component.html',\n  styleUrls: ['./map-view-page.component.scss']\n})\nexport class MapViewPageComponent implements OnInit, AfterViewInit {\n  // # hashtag template reference variable\n  @ViewChild('gmap') gmapElement: any;\n  map: google.maps.Map;\n\n  constructor(\n    public geolocationService: GeolocationService,\n    public trainingEventApiService: MockTrainingEventApiService\n  ) {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterViewInit() {\n    // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    // Add 'implements AfterViewInit' to the class.\n    this.map = this.initMap();\n\n    const trainingEvent = this.trainingEventApiService.getEventByID(1);\n\n    const trainingEventsAnyLocation = this.trainingEventApiService\n      .getMostRecentUpcomingEvents()\n    ;\n    this.setupTrainingEventsMarkers(this.map, trainingEventsAnyLocation);\n  }\n\n  /**\n   * Setup map with options\n   *\n   * @memberof MapViewPageComponent\n   */\n  initMap(): google.maps.Map {\n    const mapProp: google.maps.MapOptions = {\n      center: new google.maps.LatLng(-27.46794, 153.02809),\n      zoom: 15,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    const googleMap = new google.maps.Map(this.gmapElement.nativeElement, mapProp);\n\n    return googleMap;\n  }\n\n  /**\n   * Setup Google Maps Markers for all the training events in the array\n   *\n   * @param {google.maps.Map} googleMap\n   * @param {TrainingEvent[]} trainingEvents\n   * @memberof MapViewPageComponent\n   */\n  setupTrainingEventsMarkers(\n    googleMap: google.maps.Map,\n    trainingEvents: TrainingEvent[]) {\n\n    // Plot marker for each event\n    trainingEvents.forEach((trainingEvent: TrainingEvent) => {\n      this.setupTrainingEventMarker(googleMap, trainingEvent);\n    });\n\n  }\n  /**\n   * Sets up markers to plot training event information on map.\n   * Added associated infowindow to open on marker click.\n   * @param {google.maps.Map} googleMap the map to apply the marker onto.\n   * @param {TrainingEvent} trainingEvent the training event for marker details.\n   * @memberof MapViewPageComponent\n   */\n  setupTrainingEventMarker(\n    googleMap: google.maps.Map,\n    trainingEvent: TrainingEvent\n  ): google.maps.Marker {\n    // Setup marker\n    const markerCoordinates: any = {\n      lat: trainingEvent.locationCoordinates[0],\n      lng: trainingEvent.locationCoordinates[1]\n    }; // ?  bug () => explicitly typing google.maps.LatLng object.\n\n    const markerOptions: google.maps.MarkerOptions = {\n      position: markerCoordinates,\n      map: googleMap,             // can add to map here or call setMap() later.\n      title: trainingEvent.title\n    };\n\n    // Setup content for info window\n    const contentHtml = '<div>' +\n      '<h2>' +\n      trainingEvent.title +\n      ' id: ' + trainingEvent.id +\n      ' city: ' + trainingEvent.locationCityName +\n      ' coord: ' + trainingEvent.locationCoordinates +\n      ' dateTime: ' + trainingEvent.dateTime +\n      '</h2>' +\n      trainingEvent.description +\n      '</div>'\n    ;\n    // Setup info window for extended description on marker click.\n    const eventInfoWindowOptions: google.maps.InfoWindowOptions = {\n      content: contentHtml\n    };\n    const eventInfoWindow: google.maps.InfoWindow = new google.maps.InfoWindow(\n      eventInfoWindowOptions\n    );\n    console.log('​MapViewPageComponent:: eventInfoWindow', eventInfoWindow);\n    // Create marker\n    const marker: google.maps.Marker = new google.maps.Marker(markerOptions);\n    console.log('​MapViewPageComponent:: marker', marker);\n\n    // Add info window to marker for click event.\n    marker.addListener(\n      'click',\n      (markerClickData: any) => {\n        console.log('​MapViewPageComponent:: markerClickData', markerClickData);\n        eventInfoWindow.open(googleMap, marker);\n      }\n    );\n\n    return marker;\n  }\n\n  /**\n   * Get user location in response to user input.\n   * On page load results in a [Violation]\n   * @returns {LocationCoordinatePt}\n   * @memberof MapViewPageComponent\n   */\n  getUserLocation(): LocationCoordinatePt {\n    const userLocation = this.geolocationService.getUserLocation();\n    console.log('​MapViewPageComponent:: getUserLocation() -> userLocation', userLocation);\n    return userLocation;\n  }\n\n  // plotUserLocation\n}\n","module.exports = \"<p>\\n  master-events-list-page works!\\n</p>\\n<h4>Upcoming local events</h4>\\n<button (click)=\\\"getUserLocation()\\\">Check for events near me</button>\\n<ul>\\n  <li *ngFor=\\\"let trainingEventItem of this.upcomingTrainingEvents\\\">\\n    <app-event-list-item [trainingEvent]=\\\"trainingEventItem\\\">\\n    </app-event-list-item>\\n  </li>\\n</ul>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { TrainingEvent } from '../../models/training-event';\nimport { LocationCoordinatePt } from './../../models/training-event';\nimport { GeolocationService } from './../../services/geolocation.service';\nimport { MockTrainingEventApiService } from './../../services/mock-training-event-api.service';\n\n@Component({\n  selector: 'app-master-events-list-page',\n  templateUrl: './master-events-list-page.component.html',\n  styleUrls: ['./master-events-list-page.component.scss']\n})\nexport class MasterEventsListPageComponent implements OnInit {\n\n  // Simpler to concrete the properties here. Could also pass full reactivity.\n  upcomingTrainingEvents: TrainingEvent[] = [];\n  cityLocation = 'Brisbane'; // default\n  // Can encapsulate logic in service as needed.\n\n\n  constructor(\n    public trainingEventApiService: MockTrainingEventApiService,\n    public geolocationService: GeolocationService\n  ) {\n\n  }\n\n  ngOnInit() {\n\n    // Get events to populate list.\n    const upcomingEventsRecentAtCity = this.populateTrainingEventsInCity(this.cityLocation);\n\n    this.upcomingTrainingEvents = upcomingEventsRecentAtCity;\n\n  }\n\n\n  /**\n   * Gets training events for a city location name.\n   *\n   * @param {string} cityLocation\n   * @returns\n   * @memberof MasterEventsListPageComponent\n   */\n  populateTrainingEventsInCity(cityLocation: string): TrainingEvent[] {\n    const upcomingSortedEventsAtCity = this.trainingEventApiService\n      .getMostRecentUpcomingEventsNumSliceInCityLocation(cityLocation)\n    ;\n    console.log('​MasterEventsListPageComponent:: ngOnInit() -> upcomingSortedEventsAtBrisbane', upcomingSortedEventsAtCity);\n    return upcomingSortedEventsAtCity;\n  }\n\n  // populateTrainingEventsNearUserLocation(userLocation: LocationCoordinatePt): TrainingEvent[] {\n\n\n  // }\n  /**\n   * Get user location in response to user input.\n   * On page load results in a [Violation]\n   *\n   * @memberof MasterEventsListPageComponent\n   */\n  getUserLocation(): LocationCoordinatePt {\n    const userLocation = this.geolocationService.getUserLocation();\n    console.log('​MasterEventsListPageComponent:: ngOnInit() -> userLocation', userLocation);\n    return userLocation;\n  }\n\n  /**\n   * User explicit check for events near user location.\n   *\n   * @memberof MasterEventsListPageComponent\n   */\n  checkForEvents() {\n    this.getUserLocation();\n    this.populateTrainingEventsInCity('Brisbane');\n  }\n}\n","import { TrainingEvent } from './../models/training-event';\r\n\r\nconst DATA_DESCRIPTION_PLACEHOLDER_TEXT = 'Lorem ipsum dolor sit amet,' +\r\n    'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore' +\r\n    'et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud' +\r\n    'exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n;\r\n\r\n\r\n// lol. Magic numbers. -- TODO: Encapsulate logic. YAGNI.\r\nconst millisecondsPerSecond = 1000;\r\nconst secondsPerMinute = 60;\r\nconst minutesPerHour = 60;\r\nconst hoursPerDay = 24;\r\nconst daysPerYear = 365;\r\n\r\n/**\r\n * Get random integer from a given max range.\r\n * 0..max\r\n * @param {*} maxEpochSeconds Max top range.\r\n * @returns {number}\r\n */\r\nfunction getRandomInt(maxEpochSeconds): number {\r\n    const pseudorandomFraction = Math.random() * maxEpochSeconds;\r\n\r\n    // Rounds to int. floor/ceil.\r\n    const pseudorandomInt = Math.floor(pseudorandomFraction);\r\n\r\n    return pseudorandomInt;\r\n}\r\n\r\nfunction getRandomFutureEpoch(givenCurrentDateTimeEpoch: number) {\r\n\r\n}\r\n\r\n/**\r\n * Generate ISO 8601 seed date time for future events from current datetime.\r\n * -- Can decompose some parts. Epoch separate from ISOString test.\r\n * -- TODO: move to random generation to Mock provider/service. Static utility?\r\n * @returns {string} Future DateTime in ISO 8601 format.\r\n */\r\nfunction generateFutureDateIso8601(): string {\r\n\r\n    // Get current DateTime. Date uses epoch in milliseconds.\r\n    const currentDateTimeEpoch: number = Date.now();\r\n    // Set range for randomiser ( testing a range of days within a year. )\r\n    const millisecondsPerYear = millisecondsPerSecond *\r\n        secondsPerMinute *\r\n        minutesPerHour *\r\n        hoursPerDay *\r\n        daysPerYear\r\n    ;\r\n    const maxSecondsLimitRange = millisecondsPerYear;\r\n\r\n    // Get randomised epoch ms to add to current DateTime to get future DateTime\r\n    const randomFutureEpochAdd: number = getRandomInt(maxSecondsLimitRange);\r\n    const futureEpoch: number = currentDateTimeEpoch + randomFutureEpochAdd;\r\n    const futureDate: Date = new Date(futureEpoch);\r\n\r\n    const futureDateIso8601: string = futureDate.toISOString();\r\n\r\n    return futureDateIso8601;\r\n}\r\n\r\n// Seed data\r\nexport const DATA_SEED_TRAINING_EVENTS: TrainingEvent[] = [\r\n{\r\n    id                 : 1,\r\n    title              : 'Event Title A',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Brisbane',\r\n    locationCoordinates: [-27.4697707, 153.025123],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 2,\r\n    title              : 'Event Title B',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Brisbane',\r\n    locationCoordinates: [-27.597707, 154.025123],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 3,\r\n    title              : 'Event Title C',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Brisbane',\r\n    locationCoordinates: [-27.4897707, 153.025123],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 4,\r\n    title              : 'Event Title D',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Brisbane',\r\n    locationCoordinates: [-27.4697707, 153.025123],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 5,\r\n    title              : 'Event Title E',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Brisbane',\r\n    locationCoordinates: [-27.4597707, 153.025123],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 6,\r\n    title              : 'Event Title F',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Brisbane',\r\n    locationCoordinates: [-27.4497707, 153.025123],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 7,\r\n    title              : 'Event Title G',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Brisbane',\r\n    locationCoordinates: [-27.4697707, 153.015123],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 8,\r\n    title              : 'Event Title H',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Brisbane',\r\n    locationCoordinates: [-27.4697707, 153.035123],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 9,\r\n    title              : 'Event Title I',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Brisbane',\r\n    locationCoordinates: [-27.4797707, 153.035123],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 10,\r\n    title              : 'Event Title J',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Brisbane',\r\n    locationCoordinates: [-27.4497707, 153.045123],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 11,\r\n    title              : 'Event Title Sydney',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Sydney',\r\n    locationCoordinates: [-33.8688, 151.2093],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 12,\r\n    title              : 'Event Title Sydney 2',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Sydney',\r\n    locationCoordinates: [-33.8688, 151.2043],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 13,\r\n    title              : 'Event Title Melbourne',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Sydney',\r\n    locationCoordinates: [-33.8688, 151.2043],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n},\r\n{\r\n    id                 : 14,\r\n    title              : 'Event Title Melbourne 2',\r\n    dateTime           : generateFutureDateIso8601(),\r\n    imageUrl           : 'http://via.placeholder.com/100x100',\r\n    availableSeats     : 128,\r\n    locationCityName   : 'Sydney',\r\n    locationCoordinates: [-33.8688, 151.2043],\r\n    description        : DATA_DESCRIPTION_PLACEHOLDER_TEXT\r\n}\r\n];\r\n","import { Injectable } from '@angular/core';\n\nimport { LocationCoordinatePt } from './../models/training-event';\n\n/**\n * Provides utility functions for geospatial calculation\n *\n * @export\n * @class GeoUtilityService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeoUtilityService {\n\n  constructor() { }\n\n   /**\n   * Helper utility function to convert degrees to radians\n   * @param {number} degrees\n   * @returns\n   * @memberof GeolocationService\n   */\n  degreesToRadians(degrees: number) {\n    const radians = degrees * (Math.PI / 180);\n    return radians;\n  }\n\n  /**\n   * Haversine formula to calculate great-circle distance between two points\n   * Shortest distance over earth surface.\n   * http://www.movable-type.co.uk/scripts/latlong.html\n   * @param {LocationCoordinatePt} pt1\n   * @param {LocationCoordinatePt} pt2\n   * @returns\n   * @memberof GeolocationService\n   */\n  getDistanceKilometresBetweenCoordinates(\n    pt1: LocationCoordinatePt,\n    pt2: LocationCoordinatePt\n  ) {\n    // Radius of the earth in kilometres. Authalic radius.\n    // May have accuracy differences based on 6371 vs 6372.8\n    // But precision less important if using\n    const RRadiusOfEarthKm = 6371;\n    const diffLat = this.degreesToRadians(pt2.latitude - pt1.latitude);\n    const diffLon = this.degreesToRadians(pt2.longitude - pt1.longitude);\n    const aSquareHalfChordLengthTwoPts = Math.sin(diffLat / 2) *\n      Math.sin(diffLat / 2) +\n      Math.cos(this.degreesToRadians(pt1.latitude)) *\n      Math.cos(this.degreesToRadians(pt2.latitude)) *\n      Math.sin(diffLon / 2) * Math.sin(diffLon / 2)\n    ;\n    const cAngularDistanceTwoPtsRadians = 2 *\n      Math.atan2(\n        Math.sqrt(aSquareHalfChordLengthTwoPts),\n        Math.sqrt(1 - aSquareHalfChordLengthTwoPts)\n      );\n\n    // Distance in kilometres\n    const distance = RRadiusOfEarthKm * cAngularDistanceTwoPtsRadians;\n\n    return distance;\n  }\n}\n","import { LocationCoordinates, LocationCoordinatePt } from './../models/training-event';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n  userLocation: LocationCoordinatePt = {\n    latitude: -27.1,\n    longitude: 153\n  };\n\n  constructor() { }\n\n  /**\n   * Get user location from standard HTML5 Geolocation API\n   *\n   * @memberof GeolocationService\n   */\n  getUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position: Position) => {\n        console.log('​GeolocationService:: getUserLocation() -> position', position);\n\n        // Updates service userLocation\n        this.userLocation = position.coords;\n      });\n    }\n    return this.userLocation;\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { TrainingEvent, LocationCoordinatePt } from './../models/training-event';\nimport { DATA_SEED_TRAINING_EVENTS } from './../seed/seed-training-events';\nimport { GeoUtilityService } from './geo-utility.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockTrainingEventApiService {\n\n  constructor(public geoUtilityService: GeoUtilityService) {\n\n  }\n\n  // - TODO: Add asynchronous reactivity e.g. Promise Observable to mock delay in network requests.\n\n\n  /**\n   * Get a specific event searched by ID.\n   * -- TODO: Temp function. Can separate training event service from API. Caching\n   * @param {number} id\n   * @returns {TrainingEvent}\n   * @memberof MockTrainingEventApiService\n   */\n  getEventByID(id: number): TrainingEvent {\n    const seedTestData = DATA_SEED_TRAINING_EVENTS;\n    const foundTrainingEvent = seedTestData.find( trainingEvent => {\n      const trainingIDFound: boolean = trainingEvent.id === id;\n      return trainingIDFound;\n    });\n\n    return foundTrainingEvent;\n  }\n\n  /**\n   * Default five events\n   *\n   * @param {number} [numEvents=5] // Unused as need to process whole mock data in app.\\\n   * API would ideally sort before retrieving the results.\n   * Otherwise have to SELECT the whole table just for application usage\n   *\n   * @returns {TrainingEvent[]}\n   * @memberof MockTrainingEventApiService\n   */\n  getEvents(numEvents: number = 5): TrainingEvent[] {\n    const seedTestData = DATA_SEED_TRAINING_EVENTS;\n\n    return seedTestData;\n  }\n\n  /**\n   * Default next five 'upcoming' events in order from soonest to latest.\n   * Could make more generic.\n   *\n   * @param {number} [numEventsWanted=5] Default value five upcoming events to retrieve/select.\n   * @returns {TrainingEvent[]}\n   * @memberof MockTrainingEventApiService\n   */\n  getMostRecentUpcomingEvents(numEventsWanted: number = 5): TrainingEvent[] {\n    const events = this.getEvents(numEventsWanted);\n\n    const mostRecentEvents = this.sortEventsDateTimeSoonest(events);\n    console.log('​MockTrainingEventApiService:: constructor() -> mostRecentEvents full list', mostRecentEvents);\n\n    // Get the specified number of events after sorting. E.g. Next five events.\n    // First five events slice 0..5 or undefined,5 for optional parameter.\n    const mostRecentEventsNextNumSlice = mostRecentEvents.slice(undefined, numEventsWanted);\n    console.log('​MockTrainingEventApiService:: constructor() -> mostRecentEventsNextSlice', mostRecentEventsNextNumSlice);\n\n    return mostRecentEventsNextNumSlice;\n  }\n\n  /**\n   * Get events at the user's current location city to fulfil requirement:\n   * *Display events based on user's location.*\n   *\n   * @param {string} locationCityName\n   * @param {number} [numEventsWanted=5]\n   * @returns {TrainingEvent[]}\n   * @memberof MockTrainingEventApiService\n   */\n  getMostRecentUpcomingEventsNumSliceInCityLocation(\n    locationCityName: string,\n    numEventsWanted: number = 5\n  ): TrainingEvent[] {\n    const events = this.getEvents();\n\n    // Get events for a specific city.\n    const cityEvents = events.filter((trainingEvent: TrainingEvent) => {\n      const eventIsAtCity = this.eventFilterHasCity(trainingEvent, locationCityName);\n      return eventIsAtCity;\n    });\n\n    const mostRecentUpcomingCityEvents = this.sortEventsDateTimeSoonest(cityEvents);\n\n    const mostRecentUpcomingCityEventsNumSlice = mostRecentUpcomingCityEvents\n      .slice(undefined, numEventsWanted)\n    ;\n\n\n    return mostRecentUpcomingCityEventsNumSlice;\n  }\n\n  /**\n   * Get most recent upcoming events closest to coordinates\n   * e.g. Pass user location to get most relevant results.\n   *\n   * @param {LocationCoordinatePt} coordinates\n   * @param {number} [numEventsWanted=5]\n   * @returns {TrainingEvent[]}\n   * @memberof MockTrainingEventApiService\n   */\n  getMostRecentUpcomingEventsClosestToCoordinates(\n    coordinates: LocationCoordinatePt,\n    numEventsWanted: number = 5)\n  : TrainingEvent[] {\n    // Maybe better to use map bounds?\n    // 1. Get the geographically closest training events\n\n    // 2. Sort by recent upcoming soonest order.\n\n    // Return num events e.g. 5 results\n\n    return ;\n  }\n  /**\n   * Utility function for filtering events array\n   *\n   * @param {TrainingEvent} trainingEvent\n   * @param {string} givenLocationCityName\n   * @returns\n   * @memberof MockTrainingEventApiService\n   */\n  eventFilterHasCity(\n    trainingEvent: TrainingEvent,\n    givenLocationCityName: string\n  ) {\n    const trainingEventCityName = trainingEvent.locationCityName;\n    const sameCityNameFound = trainingEventCityName === givenLocationCityName;\n\n    return sameCityNameFound;\n  }\n\n  /**\n   *\n   * @example \"2019-08-04T00:30:39.038Z\" \"2019-02-02T03:47:07.045Z\"\n   * @param {TrainingEvent[]} events\n   * @memberof MockTrainingEventApiService\n   */\n  sortEventsDateTimeSoonest(events: TrainingEvent[]): TrainingEvent[] {\n    // use Array.sort() with custom function\n    // ISO 8601 can be sorted lexicographically. Or use Date\n    const trainingEvents = events;\n\n    const trainingEventsSortedSoonest = trainingEvents.sort(\n      (firstGivenEvent, secondComparisonEvent) => {\n        // If a < b returns -ve or -1, a is the `soonest` upcoming event.\n        const comparisonSoonest: number = this.compareUpcomingEventSoonest(\n          firstGivenEvent,\n          secondComparisonEvent\n        );\n        return comparisonSoonest;\n      }\n    );\n\n    return trainingEventsSortedSoonest;\n   }\n\n    /**\n   * Comparison function to get the future event that is happening soonest.\n   * The future dates that have least values are closest to the current date.\n   * Assumed.\n   * For Array.sort();\n   * @memberof MockTrainingEventApiService\n   */\n  compareUpcomingEventSoonest(\n    givenEvent: TrainingEvent,\n    comparisonEvent: TrainingEvent\n  ): number {\n    // Comparing the given event DateTime to the other event for comparison\n\n    const soonestFutureComparison = this.compareDateSoonest(\n      givenEvent.dateTime,\n      comparisonEvent.dateTime\n    );\n\n    // If first givenDate is equal to comparisonDate return 0;\n    // If first givenDate is smaller, -1 or the negative difference.\n    // If first givenDate is larger, +1 (can just use the difference if arith)\n\n    // doesn't matter whether -1 or 0. unless possible recursion?\n\n    return soonestFutureComparison;\n  }\n\n\n  /**\n   * Comparison function to get the future event that is happening soonest.\n   * The future dates that have least values are closest to the current date.\n   * Assumed.\n   * Could make this more generic.\n   *\n   * For Array.sort();\n   * @memberof MockTrainingEventApiService\n   */\n  compareDateSoonest(givenDate: string, comparisonDate: string): number {\n\n    // Comparing the givenDate to the other comparisonDate\n    // If first givenDate is equal to comparisonDate return 0;\n    // If first givenDate is smaller, -1 or the negative difference.\n    // If first givenDate is larger, +1 (can just use the difference if arith)\n    const givenDateIsSooner = givenDate < comparisonDate;\n\n    // doesn't matter whether -1 or 0. unless possible recursion?\n\n    return givenDateIsSooner ? -1 : 1;\n  }\n\n\n  /**\n   * Comparison that gets the future event that is most distant from now.\n   * The future dates with larger values are further away from current date.\n   *\n   * @memberof MockTrainingEventApiService\n   */\n  compareUpcomingEventLatest() {\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}